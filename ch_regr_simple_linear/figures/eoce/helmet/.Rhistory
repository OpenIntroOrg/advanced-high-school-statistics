metadatatable = metadata#
names(metadatatable)[4:15] = c("NoDrain","Drain","HemND","HemD","HealND","HealD","AbscND",           "AbscD","SerND", "SerD","InfND" ,"InfD")
datatable = xtable(metadatatable[,3:15], caption="Data", label = "tab:datatable")
library(xtable)
datatable = xtable(metadatatable[,3:15], caption="Data", label = "tab:datatable")
print(datatable, tabular.environment='longtable', NA.string = "-", size = "small")
metadatatable = metadata
names(metadatatable)
names(metadatatable)[5:16] = c("NoDrain","Drain","HemND","HemD","HealND","HealD","AbscND",           "AbscD","SerND", "SerD","InfND" ,"InfD")
datatable = xtable(metadatatable[,3:15], caption="Data", label = "tab:datatable")
print(datatable, tabular.environment='longtable', NA.string = "-", size = "small")
datatable = xtable(metadatatable[,4:16], caption="Data", label = "tab:datatable")
print(datatable, tabular.environment='longtable', NA.string = "-", size = "small")
datatable = xtable(metadatatable[,3:16], caption="Data", label = "tab:datatable")
library(xtable, verbose = F)#
library(meta, verbose = F)#
#
metadata = read.csv("/Users/mine/Documents/SCC/(1) Meta-analysis/metadata.csv", header = T)#
#
metadatatable = metadata#
names(metadatatable)[5:16] = c("NoDrain","Drain","HemND","HemD","HealND","HealD","AbscND",           "AbscD","SerND", "SerD","InfND" ,"InfD")#
#
datatable = xtable(metadatatable[,3:16], caption="Data", label = "tab:datatable")#
#
print(datatable, tabular.environment='longtable', NA.string = "-", size = "small")#
# Hematoma#
#
hema = metabin(Hematoma_D, Drain, Hematoma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata$Hematoma_ND)  & !is.na(metadata$Hematoma_D), data = metadata, sm = "OR", allstudies = FALSE)#
#
summary(hema)#
#
metabias(hema)#
#
funnel(hema, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(hema, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Hematoma", "Total", "Hematoma", "Total"))#
# Healing#
#
heal = metabin(Healing_D, Drain, Healing_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata$Healing_ND)  & !is.na(metadata$Healing_D),data = metadata, sm = "OR", allstudies = FALSE)#
#
summary(heal)#
#
metabias(heal)#
#
funnel(heal, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(heal, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Healing", "Total", "Healing", "Total"))#
# Abscess#
#
abscess = metabin(Abscess_D, Drain, Abscess_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata$Abscess_ND)  & !is.na(metadata$Abscess_D),data = metadata, sm = "OR", allstudies = FALSE)#
#
summary(abscess)#
#
metabias(abscess)#
#
funnel(abscess, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(abscess, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Abscess", "Total", "Abscess", "Total"))#
# Seroma#
#
seroma = metabin(Seroma_D, Drain, Seroma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata$Seroma_ND)  & !is.na(metadata$Seroma_D),data = metadata, sm = "OR", allstudies = FALSE)#
#
summary(seroma)#
#
metabias(seroma)#
#
funnel(seroma, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(seroma, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Seroma", "Total", "Seroma", "Total"))#
# Infection#
#
infection = metabin(Infection_D, Drain, Infection_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata$Infection_ND)  & !is.na(metadata$Infection_D),data = metadata, sm = "OR", allstudies = FALSE)#
#
summary(infection)#
#
metabias(infection)#
#
funnel(infection, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(infection, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Infection", "Total", "Infection", "Total"))#
##########################################################################
# Cumulative excluding breast biopsies#
##########################################################################
#
metadata_nbb = metadata[metadata$Procedure != "Breast biopsy",]#
#
# Hematoma#
#
hema_nbb = metabin(Hematoma_D, Drain, Hematoma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_nbb$Hematoma_ND)  & !is.na(metadata_nbb$Hematoma_D), data = metadata_nbb, sm = "OR", allstudies = FALSE)#
#
summary(hema_nbb)#
#
metabias(hema_nbb)#
#
funnel(hema, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(hema_nbb, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Hematoma", "Total", "Hematoma", "Total"))#
# Healing#
#
heal_nbb = metabin(Healing_D, Drain, Healing_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_nbb$Healing_ND)  & !is.na(metadata_nbb$Healing_D),data = metadata_nbb, sm = "OR", allstudies = FALSE)#
#
summary(heal_nbb)#
#
metabias(heal_nbb)#
#
funnel(heal_nbb, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(heal_nbb, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Healing", "Total", "Healing", "Total"))#
# Abscess#
#
abscess_nbb = metabin(Abscess_D, Drain, Abscess_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_nbb$Abscess_ND)  & !is.na(metadata_nbb$Abscess_D),data = metadata_nbb, sm = "OR", allstudies = FALSE)#
#
summary(abscess_nbb)#
#
metabias(abscess_nbb)#
#
funnel(abscess_nbb, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(abscess_nbb, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Abscess", "Total", "Abscess", "Total"))#
# Seroma#
#
seroma_nbb = metabin(Seroma_D, Drain, Seroma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_nbb$Seroma_ND)  & !is.na(metadata_nbb$Seroma_D),data = metadata_nbb, sm = "OR", allstudies = FALSE)#
#
summary(seroma_nbb)#
#
metabias(seroma_nbb)#
#
funnel(seroma_nbb, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(seroma_nbb, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Seroma", "Total", "Seroma", "Total"))#
# Infection#
#
infection_nbb = metabin(Infection_D, Drain, Infection_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_nbb$Infection_ND)  & !is.na(metadata_nbb$Infection_D),data = metadata_nbb, sm = "OR", allstudies = FALSE)#
#
summary(infection_nbb)#
#
metabias(infection_nbb)#
#
funnel(infection_nbb, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(infection_nbb, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Infection", "Total", "Infection", "Total"))#
##########################################################################
# Separate meta-analyses for each type of procedure (for those with at least 3 studies per procedure)#
##########################################################################
## Cesarian section#
#
metadata_cs = metadata[metadata$Procedure == "Cesarian section",]#
#
# Hematoma#
#
hema_cs = metabin(Hematoma_D, Drain, Hematoma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_cs$Hematoma_ND)  & !is.na(metadata_cs$Hematoma_D), data = metadata_cs, sm = "OR", allstudies = FALSE)#
#
summary(hema_cs)#
#
metabias(hema_cs)#
#
funnel(hema_cs, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(hema_cs, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Hematoma", "Total", "Hematoma", "Total"))#
#
# Healing#
#
heal_cs = metabin(Healing_D, Drain, Healing_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_cs$Healing_ND)  & !is.na(metadata_cs$Healing_D),data = metadata_cs, sm = "OR", allstudies = FALSE)#
#
summary(heal_cs)#
#
metabias(heal_cs)#
#
funnel(heal_cs, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(heal_cs, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Healing", "Total", "Healing", "Total"))#
#
# Abscess - only two studies with this outcome#
#
# Seroma#
#
seroma_cs = metabin(Seroma_D, Drain, Seroma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_cs$Seroma_ND)  & !is.na(metadata_cs$Seroma_D),data = metadata_cs, sm = "OR", allstudies = FALSE)#
#
summary(seroma_cs)#
#
metabias(seroma_cs)#
#
funnel(seroma_cs, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(seroma_cs, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Seroma", "Total", "Seroma", "Total"))#
#
# Infection#
#
infection_cs = metabin(Infection_D, Drain, Infection_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_cs$Infection_ND)  & !is.na(metadata_cs$Infection_D),data = metadata_cs, sm = "OR", allstudies = FALSE)#
#
summary(infection_cs)#
#
metabias(infection_cs)#
#
funnel(infection_cs, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(infection_cs, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Infection", "Total", "Infection", "Total"))#
#
##########################################################################
#
## Abdominal wound#
#
metadata_aw = metadata[metadata$Procedure == "Abdominal wound",]#
#
# Hematoma#
#
hema_aw = metabin(Hematoma_D, Drain, Hematoma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_aw$Hematoma_ND)  & !is.na(metadata_aw$Hematoma_D), data = metadata_aw, sm = "OR", allstudies = FALSE)#
#
summary(hema_aw)#
#
metabias(hema_aw)#
#
funnel(hema_aw, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(hema_aw, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Hematoma", "Total", "Hematoma", "Total"))#
#
# Healing#
#
heal_aw = metabin(Healing_D, Drain, Healing_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_aw$Healing_ND)  & !is.na(metadata_aw $Healing_D),data = metadata_aw, sm = "OR", allstudies = FALSE)#
#
summary(heal_aw)#
#
metabias(heal_aw)#
#
funnel(heal_aw, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(heal_aw, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Healing", "Total", "Healing", "Total"))#
#
# Abscess - less than 3 studies with this outcome#
#
# Seroma#
#
seroma_aw = metabin(Seroma_D, Drain, Seroma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_aw$Seroma_ND)  & !is.na(metadata_aw$Seroma_D),data = metadata_aw, sm = "OR", allstudies = FALSE)#
#
summary(seroma_aw)#
#
metabias(seroma_aw)#
#
funnel(seroma_aw, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(seroma_aw, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Seroma", "Total", "Seroma", "Total"))#
#
# Infection#
#
infection_aw = metabin(Infection_D, Drain, Infection_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_aw$Infection_ND)  & !is.na(metadata_aw$Infection_D),data = metadata_aw, sm = "OR", allstudies = FALSE)#
#
summary(infection_aw)#
#
metabias(infection_aw)#
#
funnel(infection_aw, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(infection_aw, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Infection", "Total", "Infection", "Total"))#
#
##########################################################################
#
## Breast reduction#
#
metadata_br = metadata[metadata$Procedure == "Breast reduction",]#
#
# Hematoma#
#
hema_br = metabin(Hematoma_D, Drain, Hematoma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_br$Hematoma_ND)  & !is.na(metadata_br$Hematoma_D), data = metadata_br, sm = "OR", allstudies = FALSE)#
#
summary(hema_br)#
#
metabias(hema_br)#
#
funnel(hema_br, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(hema_br, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Hematoma", "Total", "Hematoma", "Total"))#
#
# Healing#
#
heal_br = metabin(Healing_D, Drain, Healing_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_br$Healing_ND)  & !is.na(metadata_br $Healing_D),data = metadata_br, sm = "OR", allstudies = FALSE)#
#
summary(heal_br)#
#
metabias(heal_br)#
#
funnel(heal_br, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(heal_br, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Healing", "Total", "Healing", "Total"))#
#
# Abscess, Seroma, Infection - less than 3 studies with this outcome#
#
##########################################################################
#
## Breast biopsy#
#
metadata_bb = metadata[metadata$Procedure == "Breast biopsy",]#
#
# Hematoma#
#
hema_bb = metabin(Hematoma_D, Drain, Hematoma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_bb$Hematoma_ND)  & !is.na(metadata_bb$Hematoma_D), data = metadata_bb, sm = "OR", allstudies = FALSE)#
#
summary(hema_bb)#
#
metabias(hema_bb)#
#
funnel(hema_bb, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(hema_bb, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Hematoma", "Total", "Hematoma", "Total"))#
#
# Infection#
#
infection_bb = metabin(Infection_D, Drain, Infection_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_bb$Infection_ND)  & !is.na(metadata_bb$Infection_D),data = metadata_bb, sm = "OR", allstudies = FALSE)#
#
summary(infection_bb)#
#
metabias(infection_bb)#
#
funnel(infection_bb, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(infection_bb, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Healing", "Total", "Healing", "Total"))#
#
# Healing , Abscess, Seroma - less than 3 studies with this outcome#
##########################################################################
#
## Femoral Wounds#
#
metadata_fw = metadata[metadata$Procedure == "Femoral Wounds",]#
#
# Hematoma#
#
hema_fw = metabin(Hematoma_D, Drain, Hematoma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_fw$Hematoma_ND)  & !is.na(metadata_fw$Hematoma_D), data = metadata_fw, sm = "OR", allstudies = FALSE)#
#
summary(hema_fw)#
#
metabias(hema_fw)#
#
funnel(hema_fw, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(hema_fw, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Hematoma", "Total", "Hematoma", "Total"))#
#
# Infection#
#
infection_fw = metabin(Infection_D, Drain, Infection_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_fw$Infection_ND)  & !is.na(metadata_fw$Infection_D),data = metadata_fw, sm = "OR", allstudies = FALSE)#
#
summary(infection_fw)#
#
metabias(infection_fw)#
#
funnel(infection_fw, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(infection_fw, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Healing", "Total", "Healing", "Total"))#
#
# Healing , Abscess, Seroma - less than 3 studies with this outcome#
##########################################################################
#
## Axillary LN#
#
metadata_aln = metadata[metadata$Procedure == "Axillary LN",]#
# Abscess - only two studies with this outcome#
#
# Seroma#
#
seroma_aln = metabin(Seroma_D, Drain, Seroma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_aln$Seroma_ND)  & !is.na(metadata_aln$Seroma_D),data = metadata_aln, sm = "OR", allstudies = FALSE)#
#
summary(seroma_aln)#
#
metabias(seroma_aln)#
#
funnel(seroma_aln, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(seroma_aln, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Seroma", "Total", "Seroma", "Total"))#
#
# Infection#
#
infection_aln = metabin(Infection_D, Drain, Infection_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_aln$Infection_ND)  & !is.na(metadata_aln$Infection_D),data = metadata_aln, sm = "OR", allstudies = FALSE)#
#
summary(infection_aln)#
#
metabias(infection_aln)#
#
funnel(infection_aln, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(infection_aln, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Infection", "Total", "Infection", "Total"))#
##########################################################################
#
## Hip arthroplasty#
#
metadata_ha = metadata[metadata$Procedure == "Hip arthroplasty",]#
#
# Hematoma, Healing, Abscess, Seroma - less than 3 studies with this outcome#
#
# Infection#
#
infection_ha = metabin(Infection_D, Drain, Infection_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_ha$Infection_ND)  & !is.na(metadata_ha$Infection_D),data = metadata_ha, sm = "OR", allstudies = FALSE)#
#
summary(infection_ha)#
#
metabias(infection_ha)#
#
funnel(infection_ha, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(infection_ha, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Infection", "Total", "Infection", "Total"))#
##########################################################################
#
## Knee arthroplasty#
#
metadata_ka = metadata[metadata$Procedure == "Knee arthroplasty",]#
#
# Hematoma, Healing, Abscess, Seroma - less than 3 studies with this outcome#
#
# Infection#
#
infection_ka = metabin(Infection_D, Drain, Infection_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_ka$Infection_ND)  & !is.na(metadata_ka$Infection_D),data = metadata_ka, sm = "OR", allstudies = FALSE)#
#
summary(infection_ka)#
#
metabias(infection_ka)#
#
funnel(infection_ka, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(infection_ka, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Infection", "Total", "Infection", "Total"))#
##########################################################################
#
## Clean Contaminated#
#
metadata_cc = metadata[which(metadata$CleanContaminated == 1), ]#
# Hematoma, Healing, Abscess, Seroma - less than 3 studies with this outcome#
#
# Infection#
#
infection_cc = metabin(Infection_D, Drain, Infection_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_cc$Infection_ND)  & !is.na(metadata_cc$Infection_D),data = metadata_cc, sm = "OR", allstudies = FALSE)#
#
summary(infection_cc)#
#
metabias(infection_cc)#
#
funnel(infection_cc, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(infection_cc, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Infection", "Total", "Infection", "Total"))#
##########################################################################
#
## Obese Patient#
#
metadata_op = metadata[which(metadata$ObesePatient == 1), ]#
# Hematoma#
#
hema_op = metabin(Hematoma_D, Drain, Hematoma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_op$Hematoma_ND)  & !is.na(metadata_op$Hematoma_D), data = metadata_op, sm = "OR", allstudies = FALSE)#
#
summary(hema_op)#
#
metabias(hema_op)#
#
funnel(hema_op, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(hema_op, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Hematoma", "Total", "Hematoma", "Total"))#
# Healing#
#
heal_op = metabin(Healing_D, Drain, Healing_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_op$Healing_ND)  & !is.na(metadata_op$Healing_D),data = metadata_op, sm = "OR", allstudies = FALSE)#
#
summary(heal_op)#
#
metabias(heal_op)#
#
funnel(heal_op, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(heal_op, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Healing", "Total", "Healing", "Total"))#
# Abscess#
#
abscess_op = metabin(Abscess_D, Drain, Abscess_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_op$Abscess_ND)  & !is.na(metadata_op$Abscess_D),data = metadata_op, sm = "OR", allstudies = FALSE)#
#
summary(abscess_op)#
#
metabias(abscess_op)#
#
funnel(abscess_op, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(abscess_op, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Abscess", "Total", "Abscess", "Total"))#
# Seroma#
#
seroma_op = metabin(Seroma_D, Drain, Seroma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_op$Seroma_ND)  & !is.na(metadata_op$Seroma_D),data = metadata_op, sm = "OR", allstudies = FALSE)#
#
summary(seroma_op)#
#
metabias(seroma_op)#
#
funnel(seroma_op, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(seroma_op, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Seroma", "Total", "Seroma", "Total"))#
# Infection#
#
infection_op = metabin(Infection_D, Drain, Infection_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata_op$Infection_ND)  & !is.na(metadata_op$Infection_D), data = metadata_op, sm = "OR", allstudies = FALSE)#
#
summary(infection_op)#
#
metabias(infection_op)#
#
funnel(infection_op, comb.fixed = TRUE, yaxis = "size", cex.lab = 0.8)#
#
forest(infection_op, allstudies = F, comb.fixed = TRUE, comb.random = TRUE, lab.e = "Drain", lab.c = "No-Drain", fontsize = 8, leftlabs = c("Study", "Infection", "Total", "Infection", "Total"))#
##############
hema$group = addvar(hema, metadata, "Group", by.y = "AuthorYear")
print(datatable, tabular.environment='longtable', NA.string = "-", size = "small")
?metabias
hema = metabin(Hematoma_D, Drain, Hematoma_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata$Hematoma_ND)  & !is.na(metadata$Hematoma_D), data = metadata, sm = "OR", allstudies = FALSE)
summary(hema)
metabias(hema)
metabias(hema)$p.value
abscess = metabin(Abscess_D, Drain, Abscess_ND, NoDrain, studlab = AuthorYear, subset = !is.na(metadata$Abscess_ND)  & !is.na(metadata$Abscess_D),data = metadata, sm = "OR", allstudies = FALSE)
summary(abscess)
metabias(abscess)
metabias(abscess, k.min = 7)
?meta
??meta
help(package="meta")
q()
install.packages(c("DAAG", "MASS", "ReadImages", "VennDiagram", "arm", "caTools", "countrycode", "deldir", "foreign", "gdata", "ggplot2", "gmodels", "gplots", "iterators", "maps", "nlme", "rgl", "rpart", "scales", "sp", "spdep", "survey", "survival"))
90*4
360/2
120*4
60+60+30+30
60+60+40+40
480/3
q()
135/1.8*7
135/2*3
135/2
135*6+125
q()
2100/1.8
94*1.8
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/exam")#
#
exam = read.table("exam.txt", h = T, sep = "\t")#
#
####
#
pdf("final_exam1.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam1, pch=19, col=fadeColor(COL[1],80), xlab = "Exam 1", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
#
lmExam1 = lm(exam$Course_grade ~ exam$Exam1)#
abline(lmExam1, col = COL[2], lwd = 2)#
#
dev.off()#
#
####
#
pdf("final_exam2.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam2, pch=19, col=fadeColor(COL[1],80), xlab = "Exam 2", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
lmExam2 = lm(exam$Course_grade ~ exam$Exam2)#
abline(lmExam2, col = COL[2], lwd = 2)#
#
dev.off()
load("/Users/mine/Dropbox/oiStatistics/package/openintro/data/COL.rda")
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/exam")#
#
exam = read.table("exam.txt", h = T, sep = "\t")#
#
####
#
pdf("final_exam1.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam1, pch=19, col=fadeColor(COL[1],80), xlab = "Exam 1", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
#
lmExam1 = lm(exam$Course_grade ~ exam$Exam1)#
abline(lmExam1, col = COL[2], lwd = 2)#
#
dev.off()#
#
####
#
pdf("final_exam2.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam2, pch=19, col=fadeColor(COL[1],80), xlab = "Exam 2", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
lmExam2 = lm(exam$Course_grade ~ exam$Exam2)#
abline(lmExam2, col = COL[2], lwd = 2)#
#
dev.off()
library(openintro)
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/exam")#
#
exam = read.table("exam.txt", h = T, sep = "\t")#
#
####
#
pdf("final_exam1.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam1, pch=19, col=fadeColor(COL[1],80), xlab = "Exam 1", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
#
lmExam1 = lm(exam$Course_grade ~ exam$Exam1)#
abline(lmExam1, col = COL[2], lwd = 2)#
#
dev.off()#
#
####
#
pdf("final_exam2.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam2, pch=19, col=fadeColor(COL[1],80), xlab = "Exam 2", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
lmExam2 = lm(exam$Course_grade ~ exam$Exam2)#
abline(lmExam2, col = COL[2], lwd = 2)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/exam")#
#
exam = read.table("exam.txt", h = T, sep = "\t")#
#
####
#
pdf("final_exam1.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam1, pch=19, col=fadeColor(COL[1],90), xlab = "Exam 1", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
#
lmExam1 = lm(exam$Course_grade ~ exam$Exam1)#
abline(lmExam1, col = COL[2], lwd = 2)#
#
dev.off()#
#
####
#
pdf("final_exam2.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam2, pch=19, col=fadeColor(COL[1],90), xlab = "Exam 2", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
lmExam2 = lm(exam$Course_grade ~ exam$Exam2)#
abline(lmExam2, col = COL[2], lwd = 2)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/exam")#
#
exam = read.table("exam.txt", h = T, sep = "\t")#
#
####
#
pdf("final_exam1.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam1, pch=19, col=fadeColor(COL[1],10), xlab = "Exam 1", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
#
lmExam1 = lm(exam$Course_grade ~ exam$Exam1)#
abline(lmExam1, col = COL[2], lwd = 2)#
#
dev.off()#
#
####
#
pdf("final_exam2.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam2, pch=19, col=fadeColor(COL[1],10), xlab = "Exam 2", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
lmExam2 = lm(exam$Course_grade ~ exam$Exam2)#
abline(lmExam2, col = COL[2], lwd = 2)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/exam")#
#
exam = read.table("exam.txt", h = T, sep = "\t")#
#
####
#
pdf("final_exam1.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam1, pch=19, col=fadeColor(COL[1],90), xlab = "Exam 1", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
#
lmExam1 = lm(exam$Course_grade ~ exam$Exam1)#
abline(lmExam1, col = COL[2], lwd = 2)#
#
dev.off()#
#
####
#
pdf("final_exam2.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(exam$Course_grade ~ exam$Exam2, pch=19, col=fadeColor(COL[1],90), xlab = "Exam 2", ylab = "Final Exam", xlim = c(40,100), ylim = c(40,100), axes=FALSE)#
axis(1, at = seq(40,100,20))#
axis(2, at = seq(40,100,20))#
box()#
lmExam2 = lm(exam$Course_grade ~ exam$Exam2)#
abline(lmExam2, col = COL[2], lwd = 2)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/coastStarlight")#
#
cs = read.table("CoastStarlight.txt", h = T, sep = "\t")
names(cs)
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(cs$travel_time ~ cs$distance, xlab = "Distance (miles)", ylab = "Travel Time (minutes)", pch=20, col=COL[1], axes = FALSE)#
axis(1, at = seq(0,400,100))#
axis(2, at = seq(0,360,60))#
box()
cs$travel_time
cs = read.table("CoastStarlight.txt", h = T, sep = "\t")
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(cs$travel_time ~ cs$distance, xlab = "Distance (miles)", ylab = "Travel Time (minutes)", pch=20, col=COL[1], axes = FALSE)#
axis(1, at = seq(0,400,100))#
axis(2, at = seq(0,360,60))#
box()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/coastStarlight")#
#
cs = read.table("CoastStarlight.txt", h = T, sep = "\t")#
#
####
#
pdf("coastStarScat.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(cs$travel_time ~ cs$distance, xlab = "Distance (miles)", ylab = "Travel Time (minutes)", pch=20, col=COL[1], axes = FALSE)#
axis(1, at = seq(0,400,100))#
axis(2, at = seq(0,360,60))#
box()#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/coastStarlight")#
#
cs = read.table("CoastStarlight.txt", h = T, sep = "\t")#
#
####
#
pdf("coastStarScat.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.7,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(cs$travel_time ~ cs$distance, xlab = "Distance (miles)", ylab = "Travel Time (minutes)", pch=20, col=COL[1], axes = FALSE)#
axis(1, at = seq(0,400,100))#
axis(2, at = seq(0,360,60))#
box()#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/coastStarlight")#
#
cs = read.table("CoastStarlight.txt", h = T, sep = "\t")#
#
####
#
pdf("coastStarScat.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.7,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(cs$travel_time ~ cs$distance, xlab = "Distance (miles)", ylab = "Travel Time (minutes)", pch=20, col=COL[1], axes = FALSE)#
axis(1, at = seq(0,400,100))#
axis(2, at = seq(0,360,60))#
box()#
#
dev.off()
bc = read.csv("babiesCrawl.csv")
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/babiesCrawl")#
#
bc = read.csv("babiesCrawl.csv")
pdf("babiesCrawl.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.75,0.7,0))#
#
plot(bc$avgCrawlingAge ~ bc$temperature, xlab="Temperature (in F)", ylab="Average crawling age (in weeks)", pch=19, col=COL[1], cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()
names(babiesCrawl)
names(bc)
pdf("babiesCrawl.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.75,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bc$avg_crawling_age ~ bc$temperature, xlab="Temperature (in F)", ylab="Average crawling age (in weeks)", pch=19, col=COL[1])#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/bodyMeas")
load("/Users/mine/Desktop/Open Intro/EOCE - Second Edition/for package/bdims.Rda")
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bm$Hgt ~ bm$ShoGi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$Hgt ~ bdims$ShoGi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()
names(bdims)
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$hgt ~ bdims$sho.gi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bm$wgt ~ bm$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=COL[1], ylim = c(40,120))#
#
dev.off()
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=COL[1], ylim = c(40,120))#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/correlation")#
#
####
#
hus = c(30,31,32)#
wife = hus - 3#
#
pdf("husWifeA.pdf", 5.5, 4.3)#
#
par(mar=c(3.2,3.4,1,1), las=1, mgp=c(2,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(wife ~ hus, xlab = "(a) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()#
#
####
#
hus = c(30,31,32)#
wife = hus + 2#
pdf("husWifeB.pdf", 5.5, 4.3)#
#
par(mar=c(3.2,3.4,1,1), las=1, mgp=c(2,0.7,0), cex.lab = 1.25, cex.axis = 1.25))#
#
plot(wife ~ hus, xlab = "(b) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
dev.off()#
#
####
#
hus = c(60,61,62)#
wife = hus / 2#
pdf("husWifeC.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,4,1,1), las=1, mgp=c(2.4,0.7,0), cex.lab = 1.25, cex.axis = 1.25))#
#
plot(wife ~ hus, xlab = "(c) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/correlation")#
#
####
#
hus = c(30,31,32)#
wife = hus - 3#
#
pdf("husWifeA.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(wife ~ hus, xlab = "(a) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()#
#
####
#
hus = c(30,31,32)#
wife = hus + 2#
pdf("husWifeB.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(wife ~ hus, xlab = "(b) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
dev.off()#
#
####
#
hus = c(60,61,62)#
wife = hus / 2#
pdf("husWifeC.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(wife ~ hus, xlab = "(c) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/correlation")#
#
####
#
hus = c(30,31,32)#
wife = hus - 3#
#
pdf("husWifeA.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(wife ~ hus, xlab = "(a) Husband's Age", ylab = "Wife's Age", pch=19, col=fadeColor(COL[1], 90), axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()#
#
####
#
hus = c(30,31,32)#
wife = hus + 2#
pdf("husWifeB.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(wife ~ hus, xlab = "(b) Husband's Age", ylab = "Wife's Age", pch=19, col=fadeColor(COL[1], 90), axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
dev.off()#
#
####
#
hus = c(60,61,62)#
wife = hus / 2#
pdf("husWifeC.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(wife ~ hus, xlab = "(c) Husband's Age", ylab = "Wife's Age", pch=19, col=fadeColor(COL[1], 90), axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/correlation")#
#
####
#
hus = c(30,31,32)#
wife = hus - 3#
#
pdf("husWifeA.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(wife ~ hus, xlab = "(a) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()#
#
####
#
hus = c(30,31,32)#
wife = hus + 2#
pdf("husWifeB.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(wife ~ hus, xlab = "(b) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
dev.off()#
#
####
#
hus = c(60,61,62)#
wife = hus / 2#
pdf("husWifeC.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(wife ~ hus, xlab = "(c) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/bodyMeas")#
#
library(openintro)#
data(bdims)#
#
####
#
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$hgt ~ bdims$sho.gi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(fadeColor(COL[1], 90),90))#
#
dev.off()#
#
####
#
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1], 90), ylim = c(40,120))#
#
dev.off()#
#
####
#
cor(bm$Hgt, bm$ShoGi)#
mean(bm$Hgt)#
sd(bm$Hgt)#
mean(bm$ShoGi)#
sd(bm$ShoGi)#
#
####
#
COL <- c('#550000','#22558866')#
#
setwd("/Users/cetinkaya/Dropbox/Desktop/Open Intro/Chp 7 - EOCE/figures")#
#
pdf("bodyWgtHgt.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.8,0.7,0))#
#
plot(bm$Wgt ~ bm$Hgt, xlab="Height (in cm)", ylab="Weight (in kg)", pch=19, col=COL[2], cex.lab = 1.5, cex.axis = 1.5, ylim = c(40,120))#
#
dev.off()#
#
###
#
library(xtable)#
#
xtable(summary(lm(bm$Wgt ~ bm$Hgt)))
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$hgt ~ bdims$sho.gi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(fadeColor(COL[1], 90),90))#
#
dev.off()#
#
####
#
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1], 90), ylim = c(40,120))#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/bodyMeas")#
#
library(openintro)#
data(bdims)#
#
####
#
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$hgt ~ bdims$sho.gi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()#
#
####
#
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), ylim = c(40,120))#
#
dev.off()
load("/Users/mine/Dropbox/oiStatistics/package/openintro/data/COL.rda")
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/bodyMeas")#
#
library(openintro)#
data(bdims)#
#
####
#
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$hgt ~ bdims$sho.gi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()#
#
####
#
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), ylim = c(40,120))#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/correlation")#
#
####
#
hus = c(30,31,32)#
wife = hus - 3#
#
pdf("husWifeA.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(a) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()#
#
####
#
hus = c(30,31,32)#
wife = hus + 2#
pdf("husWifeB.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(b) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
dev.off()#
#
####
#
hus = c(60,61,62)#
wife = hus / 2#
pdf("husWifeC.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(c) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/correlation")#
#
####
#
hus = c(30,31,32)#
wife = hus - 3#
#
pdf("husWifeA.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(3,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(a) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()#
#
####
#
hus = c(30,31,32)#
wife = hus + 2#
pdf("husWifeB.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(3,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(b) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
dev.off()#
#
####
#
hus = c(60,61,62)#
wife = hus / 2#
pdf("husWifeC.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(3,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(c) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/correlation")#
#
####
#
hus = c(30,31,32)#
wife = hus - 3#
#
pdf("husWifeA.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(a) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()#
#
####
#
hus = c(30,31,32)#
wife = hus + 2#
pdf("husWifeB.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(b) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
dev.off()#
#
####
#
hus = c(60,61,62)#
wife = hus / 2#
pdf("husWifeC.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(c) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/correlation")#
#
####
#
hus = c(30,31,32)#
wife = hus - 3#
#
pdf("husWifeA.pdf", 5.5, 4.3)#
#
par(mar=c(4,4.2,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(a) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()#
#
####
#
hus = c(30,31,32)#
wife = hus + 2#
pdf("husWifeB.pdf", 5.5, 4.3)#
#
par(mar=c(4,4.2,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(b) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
dev.off()#
#
####
#
hus = c(60,61,62)#
wife = hus / 2#
pdf("husWifeC.pdf", 5.5, 4.3)#
#
par(mar=c(4,4.2,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(c) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/correlation")#
#
####
#
hus = c(30,31,32)#
wife = hus - 3#
#
pdf("husWifeA.pdf", 5.5, 4.3)#
#
par(mar=c(4,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(a) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()#
#
####
#
hus = c(30,31,32)#
wife = hus + 2#
pdf("husWifeB.pdf", 5.5, 4.3)#
#
par(mar=c(4,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(b) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
dev.off()#
#
####
#
hus = c(60,61,62)#
wife = hus / 2#
pdf("husWifeC.pdf", 5.5, 4.3)#
#
par(mar=c(4,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(c) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/correlation")#
#
####
#
hus = c(30,31,32)#
wife = hus - 3#
#
pdf("husWifeA.pdf", 5.5, 4.3)#
#
par(mar=c(4.5,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(a) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()#
#
####
#
hus = c(30,31,32)#
wife = hus + 2#
pdf("husWifeB.pdf", 5.5, 4.3)#
#
par(mar=c(4.5,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(b) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
dev.off()#
#
####
#
hus = c(60,61,62)#
wife = hus / 2#
pdf("husWifeC.pdf", 5.5, 4.3)#
#
par(mar=c(4.5,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(wife ~ hus, xlab = "(c) Husband's Age", ylab = "Wife's Age", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = hus)#
axis(2, at = wife)#
box()#
#
lines(c(min(hus),max(hus)),c(min(wife),max(wife)), lty = 3)#
#
dev.off()
m = c(20000,30000,40000)#
f = m - 5000#
#
pdf("mfSalA.pdf", 5.5, 4.3)#
#
par(mar=c(4.5,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(f ~ m, xlab = "(a) Males' salaries", ylab = "Females' salaries", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = m)#
axis(2, at = f, las = 3)#
box()#
#
lines(c(min(m),max(m)),c(min(f),max(f)), lty = 3)#
#
dev.off()#
#
####
#
m = c(20000,30000,40000)#
f = m / 1.25#
#
pdf("mfSalB.pdf", 5.5, 4.3)#
#
par(mar=c(4.5,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(f ~ m, xlab = "(b) Males' salaries", ylab = "Females' salaries", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = m)#
axis(2, at = f, las = 3)#
box()#
#
lines(c(min(m),max(m)),c(min(f),max(f)), lty = 3)#
#
dev.off()#
#
####
#
m = c(20000,30000,40000)#
f = m / 0.85#
#
pdf("mfSalC.pdf", 5.5, 4.3)#
#
par(mar=c(4.5,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(f ~ m, xlab = "(c) Males' salaries", ylab = "Females' salaries", pch=19, col=COL[1], axes = FALSE)#
axis(1, at = m)#
axis(2, at = f, las = 3)#
box()#
#
lines(c(min(m),max(m)),c(min(f),max(f)), lty = 3)#
#
dev.off()
m = c(20000,30000,40000)#
f = m - 5000#
#
pdf("mfSalA.pdf", 5.5, 4.3)#
#
par(mar=c(4.5,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(f ~ m, xlab = "(a) Males' salaries", ylab = "Females' salaries", pch=19, col=COL[1], axes = FALSE, xlim = 18000,42000)#
axis(1, at = m)#
axis(2, at = f, las = 3)#
box()#
#
lines(c(min(m),max(m)),c(min(f),max(f)), lty = 3)#
#
dev.off()
m = c(20000,30000,40000)#
f = m - 5000#
#
pdf("mfSalA.pdf", 5.5, 4.3)#
#
par(mar=c(4.5,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(f ~ m, xlab = "(a) Males' salaries", ylab = "Females' salaries", pch=19, col=COL[1], axes = FALSE, xlim = c(18000,42000))#
axis(1, at = m)#
axis(2, at = f, las = 3)#
box()#
#
lines(c(min(m),max(m)),c(min(f),max(f)), lty = 3)#
#
dev.off()
m = c(20000,30000,40000)#
f = m / 1.25#
#
pdf("mfSalB.pdf", 5.5, 4.3)#
#
par(mar=c(4.5,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(f ~ m, xlab = "(b) Males' salaries", ylab = "Females' salaries", pch=19, col=COL[1], axes = FALSE, xlim = c(18000,42000))#
axis(1, at = m)#
axis(2, at = f, las = 3)#
box()#
#
lines(c(min(m),max(m)),c(min(f),max(f)), lty = 3)#
#
dev.off()#
#
####
#
m = c(20000,30000,40000)#
f = m / 0.85#
#
pdf("mfSalC.pdf", 5.5, 4.3)#
#
par(mar=c(4.5,4.5,0.5,0.5), las=1, mgp=c(3.2,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(f ~ m, xlab = "(c) Males' salaries", ylab = "Females' salaries", pch=19, col=COL[1], axes = FALSE, xlim = c(18000,42000))#
axis(1, at = m)#
axis(2, at = f, las = 3)#
box()#
#
lines(c(min(m),max(m)),c(min(f),max(f)), lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")
tourism = read.csv("tourism.csv")
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")#
#
tourism = read.csv("tourism.csv")
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")#
#
tourism = read.csv("tourism.csv")
names(tourism)
par(mar=c(4,4,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(tourism$tourist_spending ~ tourism$visitor_count_tho, xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", pch=19, col=COL[1], axes = FALSE)#
#
lmTourism = lm(tourism$tourist_spending ~ tourism$visitor_count_tho)#
abline(lmTourism, col = COL[2], lwd = 2)#
#
axis(1, at = c(0, 12500, 25000), cex.axis = 1.5)#
axis(2, at = c(0, 7500, 15000), las = 3, cex.axis = 1.5)#
box()
pdf("tourismScat.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(tourism$tourist_spending ~ tourism$visitor_count_tho, xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", pch=19, col=COL[1], axes = FALSE)#
#
lmTourism = lm(tourism$tourist_spending ~ tourism$visitor_count_tho)#
abline(lmTourism, col = COL[2], lwd = 2)#
#
axis(1, at = c(0, 12500, 25000), cex.axis = 1.5)#
axis(2, at = c(0, 7500, 15000), las = 3, cex.axis = 1.5)#
box()#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")#
#
tourism = read.csv("tourism.csv")#
#
####
#
pdf("tourismScat.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(tourism$tourist_spending ~ tourism$visitor_count_tho, xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", pch=19, col=COL[1], axes = FALSE)#
#
lmTourism = lm(tourism$tourist_spending ~ tourism$visitor_count_tho)#
abline(lmTourism, col = COL[2], lwd = 2)#
#
axis(1, at = c(0, 12500, 25000))#
axis(2, at = c(0, 7500, 15000), las = 3)#
box()#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/starbucks")#
#
sb = read.csv("starbucks.csv")
names(sb)
pdf("carb_cals.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(sb$carb ~ sb$calories, xlab="Calories", ylab="Carb (in g)", pch=19, col=COL[1], axes = FALSE)#
#
lmSbuxCarb = lm(sb$carb ~ sb$calories)#
abline(lmSbuxCarb, col = COL[1], lwd = 3)#
#
axis(1, at = c(100, 300, 500))#
axis(2, at = seq(0, 80, 20))#
box()#
#
dev.off()
pdf("carb_cals.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(sb$carb ~ sb$calories, xlab="Calories", ylab="Carb (in g)", pch=19, col=COL[1], axes = FALSE)#
#
lmSbuxCarb = lm(sb$carb ~ sb$calories)#
abline(lmSbuxCarb, col = COL[2], lwd = 2)#
#
axis(1, at = c(100, 300, 500))#
axis(2, at = seq(0, 80, 20))#
box()#
#
dev.off()
par(mar=c(7,4,5,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(lmTourism$res ~ tourism$visitor_count_tho, xlab = "Number of Tourists (in thousands)", ylab = "Residuals", pch = 19, col=COL[1], cex.lab = 1.25, cex.axis = 1.25, axes = FALSE)#
#
axis(1, at = c(0, 12500, 25000), cex.axis = 1.5)#
axis(2, at = c(-750, 0, 750), las = 3, cex.axis = 1.5)#
box()#
#
abline(h = 0, lty = 2, lwd = 2)
par(mar=c(3.6,3,1,1), las=1, mgp=c(2.5,0.8,0))#
#
histPlot(lmTourism$res, xlab = "Residuals", ylab = "", cex.lab = 1.5, cex.axis = 1.5, axes = FALSE, ylim = c(0,20))#
#
axis(1, c(-1500, -750, 0, 750, 1500), cex.axis = 1.5)#
axis(2, c(0, 10, 20), cex.axis = 1.5)
par(mar=c(4,4,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
histPlot(lmTourism$res, xlab = "Residuals", ylab = "", axes = FALSE, ylim = c(0,20), col = COL[1])#
#
axis(1, c(-1500, -750, 0, 750, 1500))#
axis(2, c(0, 10, 20))
par(mar=c(4,2,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
histPlot(lmTourism$res, xlab = "Residuals", ylab = "", axes = FALSE, ylim = c(0,20), col = COL[1])#
#
axis(1, c(-1500, -750, 0, 750, 1500))#
axis(2, c(0, 10, 20))
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")#
#
tourism = read.csv("tourism.csv")#
#
####
#
pdf("tourismScat.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(tourism$tourist_spending ~ tourism$visitor_count_tho, xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", pch=19, col=COL[1], axes = FALSE)#
#
lmTourism = lm(tourism$tourist_spending ~ tourism$visitor_count_tho)#
abline(lmTourism, col = COL[2], lwd = 2)#
#
axis(1, at = c(0, 12500, 25000))#
axis(2, at = c(0, 7500, 15000), las = 3)#
box()#
#
dev.off()#
#
####
#
pdf("tourismResScat.pdf", 5.5, 4.3)#
#
par(mar=c(7,4,5,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(lmTourism$res ~ tourism$visitor_count_tho, xlab = "Number of Tourists (in thousands)", ylab = "Residuals", pch = 19, col=COL[1], cex.lab = 1.25, cex.axis = 1.25, axes = FALSE)#
#
axis(1, at = c(0, 12500, 25000), cex.axis = 1.5)#
axis(2, at = c(-750, 0, 750), las = 3, cex.axis = 1.5)#
box()#
#
abline(h = 0, lty = 2, lwd = 2)#
#
dev.off()#
#
####
#
pdf("tourismResHist.pdf", 5.5, 4.3)#
#
par(mar=c(4,2,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
histPlot(lmTourism$res, xlab = "Residuals", ylab = "", axes = FALSE, ylim = c(0,20), col = COL[1])#
#
axis(1, c(-1500, -750, 0, 750, 1500))#
axis(2, c(0, 10, 20))#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")#
#
tourism = read.csv("tourism.csv")#
#
####
#
pdf("tourism_scat.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(tourism$tourist_spending ~ tourism$visitor_count_tho, xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", pch=19, col=COL[1], axes = FALSE)#
#
lmTourism = lm(tourism$tourist_spending ~ tourism$visitor_count_tho)#
abline(lmTourism, col = COL[2], lwd = 2)#
#
axis(1, at = c(0, 12500, 25000))#
axis(2, at = c(0, 7500, 15000), las = 3)#
box()#
#
dev.off()#
#
####
#
pdf("tourism_resScat.pdf", 5.5, 4.3)#
#
par(mar=c(7,4,5,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(lmTourism$res ~ tourism$visitor_count_tho, xlab = "Number of Tourists (in thousands)", ylab = "Residuals", pch = 19, col=COL[1], cex.lab = 1.25, cex.axis = 1.25, axes = FALSE)#
#
axis(1, at = c(0, 12500, 25000), cex.axis = 1.5)#
axis(2, at = c(-750, 0, 750), las = 3, cex.axis = 1.5)#
box()#
#
abline(h = 0, lty = 2, lwd = 2)#
#
dev.off()#
#
####
#
pdf("tourism_resHist.pdf", 5.5, 4.3)#
#
par(mar=c(4,2,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
histPlot(lmTourism$res, xlab = "Residuals", ylab = "", axes = FALSE, ylim = c(0,20), col = COL[1])#
#
axis(1, c(-1500, -750, 0, 750, 1500))#
axis(2, c(0, 10, 20))#
#
dev.off()
lmPlot(lmTourism$res ~ tourism$visitor_count_tho)
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending)
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = COL[1])
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90))
?lmPlot
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)")
?lmPlot
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2])
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2)
?lmPlot
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE)
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 2)
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 4)
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3)
`lmPlot` <- function(x, y, xAxis=0, yAxis=4, resAxis=3, resSymm=TRUE, wBox=TRUE, wLine=TRUE, lCol='#00000088', lty=1, lwd=1, xlab='', ylab='', marRes=NULL, col='#22558888', pch=20, cex=1.5, xR=0.02, yR=0.1, xlim=NULL, ylim=NULL, subset=NULL, parCustom=FALSE, myHeight=c(1,0.45), plots=c('both', 'mainOnly', 'resOnly'), highlight=NULL, hlCol=NULL, hlCex=1.5, hlPch=20, na.rm=TRUE, ...){#
	if(na.rm){#
		these <- is.na(x) | is.na(y)#
		if(any(these)){#
			x <- x[!these]#
			y <- y[!these]#
		}#
	}#
	if(!parCustom){#
		myMat <- rbind(matrix(1:2,2))#
		layout(myMat, 1, myHeight)#
		mar <- c(3,4,0.5,0.5)#
		if(xlab == ''){#
			mar[1] <- 1.8#
			if(xAxis < 1){#
				mar[1] <- 0.25#
			}#
		}#
		if(ylab == ''){#
			mar[2] <- 3#
			if(yAxis < 1 && resAxis < 1){#
				mar[2] <- 0.5#
			}#
		}#
		par(mar=mar, mgp=c(1.9, 0.7, 0))#
	}#
	if(is.null(ylim)[1]){#
		YR <- range(y) + c(-1,1)*yR*diff(range(y))#
	} else {#
		YR <- ylim#
	}#
	if(is.null(xlim)[1]){#
		XR <- range(x) + c(-1,1)*xR*diff(range(x))#
	} else {#
		XR <- xlim#
	}#
	these <- 1:length(x)#
	if(length(highlight) > 0){#
		these <- these[-highlight]#
	}#
	plot(x[these], y[these], axes=FALSE, xlab=xlab, ylab=ylab, col=col, pch=pch, cex=cex, ylim=YR, xlim=XR, ...)#
	if(!is.null(highlight)[1]){#
		if(is.null(hlCol)[1]){#
			points(x[highlight], y[highlight], col=1+1:length(highlight), pch=hlPch, cex=hlCex)#
		} else {#
			points(x[highlight], y[highlight], col=hlCol, pch=hlPch, cex=hlCex)#
		}#
	}#
	if(wBox){#
		box()#
	}#
	if(xAxis > 0){#
		buildAxis(1, x, xAxis, nMax=xAxis)#
	}#
	if(yAxis > 0){#
		buildAxis(2, y, yAxis, nMax=yAxis)#
	}#
	g <- lm(y ~ x, subset=subset)#
	if(wLine){#
		abline(g, col=lCol, lty=lty, lwd=lwd)#
	}#
	if(!is.null(marRes)[1]){#
		par(mar=marRes)#
	} else if(!parCustom){#
		par(mar=c(0.5,mar[2],0.25,0.5))#
	}#
	X <- list(x=x)#
	y <- y - predict(g, X)#
	if(resSymm){#
		YR <- range(c(y,-y)) + c(-1,1)*yR*diff(range(c(y,-y)))#
	} else {#
		YR <- range(y) + c(-1,1)*yR*diff(range(y))#
	}#
	plot(x[these],y[these], axes=FALSE, xlab=xlab, ylab='', col=col, pch=pch, cex=cex, ylim=YR, ...)#
	if(!is.null(highlight)[1]){#
		if(is.null(hlCol)[1]){#
			points(x[highlight], y[highlight], col=1+1:length(highlight), pch=hlPch, cex=hlCex)#
		} else {#
			points(x[highlight], y[highlight], col=hlCol, pch=hlPch, cex=hlCex)#
		}#
	}#
	if(wBox){#
		box()#
	}#
	if(resAxis > 0){#
		if(resSymm){#
			y <- c(y,-y)#
		}#
		buildAxis(2, y, resAxis, nMax=resAxis)#
	}#
	abline(h=0, lty=3, col=lCol)#
}
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3)
?lmPlot
pdf("tourism_scat.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3)
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")#
#
tourism = read.csv("tourism.csv")#
#
####
#
pdf("tourism_scat.pdf", 5.5, 4.3)#
#
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3)#
#
dev.off()
lmPlot(sb$calories, sb$carb, col = fadeColor(COL[1],90), xlab="Calories", ylab="Carb (in g)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3)
lmSbuxCarb = lm(sb$carb ~ sb$calories)
par(mar=c(3.6,3,1,1), las=1, mgp=c(2.5,0.8,0))#
#
histPlot(lmSbuxCarb$res, xlab = "Residuals", ylab = "", cex.lab = 1.5, cex.axis = 1.5, axes = FALSE, col = COL[1])#
#
axis(1, c(-30, -15, 0, 15, 30), cex.axis = 1.5)#
axis(2, c(0, 5, 10, 15), cex.axis = 1.5)
par(mar=c(3.6,3,1,1), las=1, mgp=c(2.5,0.8,0))#
#
histPlot(lmSbuxCarb$res, xlab = "Residuals", ylab = "", cex.lab = 1.5, cex.axis = 1.5, axes = FALSE, col = COL[1])#
#
axis(1, c(-30, -15, 0, 15, 30), cex.axis = 1.5)#
axis(2, c(0, 5, 10, 15), cex.axis = 1.5)
par(mar=c(3.6,3,1,1), las=1, mgp=c(2.5,0.8,0))#
#
histPlot(lmSbuxCarb$res, xlab = "Residuals", ylab = "", cex.lab = 1.5, cex.axis = 1.5, axes = FALSE, col = COL[1])#
#
axis(1, c(-30, -15, 0, 15, 30), cex.axis = 1.5)#
axis(2, c(0, 5, 10, 15), cex.axis = 1.5)
par(mar=c(3.6,3,1,1), las=1, mgp=c(2.5,0.8,0))#
#
histPlot(lmSbuxCarb$res, xlab = "Residuals", ylab = "", cex.lab = 1.5, cex.axis = 1.5, axes = FALSE, col = COL[1])#
#
axis(1, c(-30, -15, 0, 15, 30), cex.axis = 1.5)#
axis(2, c(0, 5, 10, 15,20,25), cex.axis = 1.5)
par(mar=c(3.6,3,1,1), las=1, mgp=c(2.5,0.8,0))#
#
histPlot(lmSbuxCarb$res, xlab = "Residuals", ylab = "", cex.lab = 1.5, cex.axis = 1.5, axes = FALSE, col = COL[1])#
#
axis(1, c(-30, -15, 0, 15, 30), cex.axis = 1.5)#
axis(2, c(0, 5, 10, 15,20,25), cex.axis = 1.5)
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/starbucks")#
#
sb = read.csv("starbucks.csv")#
#
####
#
pdf("carb_cals.pdf", 5.5, 4.3)#
#
lmPlot(sb$calories, sb$carb, col = fadeColor(COL[1],90), xlab="Calories", ylab="Carb (in g)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3)#
#
dev.off()#
#
###
#
lmSbuxCarb = lm(sb$carb ~ sb$calories)#
#
####
#
pdf("carb_cals_res_hist.pdf", 5.5, 4.3)#
#
par(mar=c(3.6,3,1,1), las=1, mgp=c(2.5,0.8,0))#
#
histPlot(lmSbuxCarb$res, xlab = "Residuals", ylab = "", cex.lab = 1.5, cex.axis = 1.5, axes = FALSE, col = COL[1])#
#
axis(1, c(-30, -15, 0, 15, 30), cex.axis = 1.5)#
axis(2, c(0, 5, 10, 15,20,25), cex.axis = 1.5)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")#
#
tourism = read.csv("tourism.csv")#
#
####
#
pdf("tourism_scat.pdf", 5.5, 4.3)#
#
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3)#
#
dev.off()#
#
####
#
pdf("tourism_resHist.pdf", 5.5, 4.3)#
#
par(mar=c(4,2,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.25, cex.axis = 1.25)#
#
histPlot(lmTourism$res, xlab = "Residuals", ylab = "", axes = FALSE, ylim = c(0,20), col = COL[1])#
#
axis(1, c(-1500, -750, 0, 750, 1500))#
axis(2, c(0, 10, 20))#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/gradesTV")
gradesTV = read.table("Grades vs. TV.txt", h = T, sep = "\t")
gradesTV
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(gradesTV$Grades ~ gradesTV$TV, xlab='TV (hours)', ylab='Grades (out of 100)', pch=19, col=COL[1], cex.lab = 1.5, cex.axis = 1.5, axes = FALSE)#
axis(1, seq(0,30,10))#
axis(2, seq(60,100,10))#
box()#
#
lmGradesTV = lm(gradesTV$Grades ~ gradesTV$TV)#
abline(lmGradesTV, col = COL[2])
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(gradesTV$Grades ~ gradesTV$TV, xlab='TV (hours)', ylab='Grades (out of 100)', pch=19, col=COL[1], cex.lab = 1.5, cex.axis = 1.5, axes = FALSE)#
axis(1, seq(0,30,10))#
axis(2, seq(60,100,10))#
box()#
#
lmGradesTV = lm(gradesTV$Grades ~ gradesTV$TV)#
abline(lmGradesTV, col = COL[2])
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(gradesTV$Grades ~ gradesTV$TV, xlab='TV (hours)', ylab='Grades (out of 100)', pch=19, col=COL[1], cex.lab = 1.5, cex.axis = 1.5, axes = FALSE)#
axis(1, seq(0,30,10))#
axis(2, seq(60,100,10))#
box()#
#
lmGradesTV = lm(gradesTV$Grades ~ gradesTV$TV)#
abline(lmGradesTV, col = COL[2])
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(gradesTV$Grades ~ gradesTV$TV, xlab='TV (hours)', ylab='Grades (out of 100)', pch=19, col=COL[1], cex.lab = 1.5, cex.axis = 1.5, axes = FALSE)#
axis(1, seq(0,30,10))#
axis(2, seq(60,100,10))#
box()#
#
lmGradesTV = lm(gradesTV$Grades ~ gradesTV$TV)#
abline(lmGradesTV, col = COL[2])
pdf("gradesTV.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(gradesTV$Grades ~ gradesTV$TV, xlab='TV (hours)', ylab='Grades (out of 100)', pch=19, col=COL[1], cex.lab = 1.5, cex.axis = 1.5, axes = FALSE)#
axis(1, seq(0,30,10))#
axis(2, seq(60,100,10))#
box()#
#
lmGradesTV = lm(gradesTV$Grades ~ gradesTV$TV)#
abline(lmGradesTV, col = COL[2])#
#
dev.off()
pdf("gradesTV.pdf", 7.5, 4.3)#
#
lmPlot(gradesTV$TV, gradesTV$Grades, col = fadeColor(COL[1],90), xlab='TV (hours)', ylab='Grades (out of 100)', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3)#
#
dev.off()
pdf("gradesTV.pdf", 5.5, 7.5)#
#
lmPlot(gradesTV$TV, gradesTV$Grades, col = fadeColor(COL[1],90), xlab='TV (hours)', ylab='Grades (out of 100)', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3)#
#
dev.off()
pdf("gradesTV.pdf", 5.5, 7)#
#
lmPlot(gradesTV$TV, gradesTV$Grades, col = fadeColor(COL[1],90), xlab='TV (hours)', ylab='Grades (out of 100)', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3)#
#
dev.off()
lmPlot(gradesTV$TV, gradesTV$Grades, col = fadeColor(COL[1],90), xlab='TV (hours)', ylab='Grades (out of 100)', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5)
lmPlot(gradesTV$TV, gradesTV$Grades, col = fadeColor(COL[1],90), xlab='TV (hours)', ylab='Grades (out of 100)', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5)
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/gradesTV")#
#
gradesTV = read.table("Grades vs. TV.txt", h = T, sep = "\t")#
####
#
pdf("gradesTV.pdf", 5.5, 7)#
#
lmPlot(gradesTV$TV, gradesTV$Grades, col = fadeColor(COL[1],90), xlab='TV (hours)', ylab='Grades (out of 100)', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/gradesTV")#
#
gradesTV = read.table("Grades vs. TV.txt", h = T, sep = "\t")#
####
#
pdf("gradesTV.pdf", 5.5, 7)#
#
lmPlot(gradesTV$TV, gradesTV$Grades, col = COL[1], xlab='TV (hours)', ylab='Grades (out of 100)', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5)#
#
dev.off()
?lmPlot
pdf("gradesTV.pdf", 5.5, 7)#
#
lmPlot(gradesTV$TV, gradesTV$Grades, col = COL[1], xlab='TV (hours)', ylab='Grades (out of 100)', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5, cex.lab = 1.25, cex.axis = 1.25)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/starbucks")#
#
sb = read.csv("starbucks.csv")#
#
####
#
pdf("carb_cals.pdf", 5.5, 7)#
#
lmPlot(sb$calories, sb$carb, col = fadeColor(COL[1],90), xlab="Calories", ylab="Carb (in g)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, cex.lab = 1.25, cex.axis = 1.25)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")#
#
tourism = read.csv("tourism.csv")#
#
####
#
pdf("tourism_scat.pdf", 5.5, 7)#
#
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, cex.lab = 1.25, cex.axis = 1.25)#
#
dev.off()
pdf("tourism_resHist.pdf", 5.5, 4.3)#
#
par(mar=c(4,2,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.5, cex.axis = 1.5)#
#
histPlot(lmTourism$res, xlab = "Residuals", ylab = "", axes = FALSE, ylim = c(0,20), col = COL[1])#
#
axis(1, c(-1500, -750, 0, 750, 1500))#
axis(2, c(0, 10, 20))#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")#
#
tourism = read.csv("tourism.csv")#
#
####
#
pdf("tourism_scat.pdf", 5.5, 7)#
#
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, cex.lab = 1.25, cex.axis = 1.25)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")#
#
tourism = read.csv("tourism.csv")#
#
####
#
pdf("tourism_scat.pdf", 5.5, 7)#
#
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()#
#
####
#
pdf("tourism_resHist.pdf", 5.5, 4.3)#
#
par(mar=c(4,2,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.5, cex.axis = 1.5)#
#
histPlot(lmTourism$res, xlab = "Residuals", ylab = "", axes = FALSE, ylim = c(0,20), col = COL[1])#
#
axis(1, c(-1500, -750, 0, 750, 1500))#
axis(2, c(0, 10, 20))#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/tourism")#
#
tourism = read.csv("tourism.csv")#
#
####
#
pdf("tourism_scat.pdf", 5.5, 7)#
#
lmPlot(tourism$visitor_count_tho, tourism$tourist_spending, col = fadeColor(COL[1],90), xlab = "Number of tourists (in thousands)", ylab = "Spending (in million $)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, cex.lab = 1.25, cex.axis = 1.25)#
#
dev.off()#
#
####
#
pdf("tourism_resHist.pdf", 5.5, 4.3)#
#
par(mar=c(4,2,1,1), las=1, mgp=c(2.75,0.8,0), cex.lab = 1.5, cex.axis = 1.5)#
#
histPlot(lmTourism$res, xlab = "Residuals", ylab = "", axes = FALSE, ylim = c(0,20), col = COL[1])#
#
axis(1, c(-1500, -750, 0, 750, 1500))#
axis(2, c(0, 10, 20))#
#
dev.off()
?lmPlot
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/starbucks")#
#
sb = read.csv("starbucks.csv")#
#
####
#
pdf("carb_cals.pdf", 5.5, 7)#
#
lmPlot(sb$calories, sb$carb, col = fadeColor(COL[1],90), xlab="Calories", ylab="Carb (in g)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, cex.lab = 1.25, cex.axis = 1.25)#
#
dev.off()#
#
###
#
lmSbuxCarb = lm(sb$carb ~ sb$calories)#
#
####
#
pdf("carb_cals_res_hist.pdf", 5.5, 4.3)#
#
par(mar=c(3.6,3,1,1), las=1, mgp=c(2.5,0.8,0))#
#
histPlot(lmSbuxCarb$res, xlab = "Residuals", ylab = "", cex.lab = 1.5, cex.axis = 1.5, axes = FALSE, col = COL[1])#
#
axis(1, c(-30, -15, 0, 15, 30), cex.axis = 1.5)#
axis(2, c(0, 5, 10, 15,20,25), cex.axis = 1.5)#
#
dev.off()#
#
####
####
#
pdf("pro_cals.pdf", 5.5, 7)#
#
lmPlot(sb$protein, sb$carb, col = fadeColor(COL[1],90), xlab="Calories", ylab="Carb (in g)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, cex.lab = 1.25, cex.axis = 1.25)#
#
dev.off()
pdf("pro_cals.pdf", 5.5, 7)#
#
lmPlot(sb$calories, sb$protein, col = fadeColor(COL[1],90), xlab="Calories", ylab="Carb (in g)", lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, cex.lab = 1.25, cex.axis = 1.25)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/outliers")#
#
set.seed(83629)#
x = seq(1,50,1)#
#
y = -2 * x + 20 + rnorm(length(x), mean = 0, sd = 10)#
#
xInf = c(x[1:49], 200)#
#
yLev = c(y[1:49], -370)#
#
yOut = c(y[1:25], y[26]+100, y[27:50])#
#
####
#
pdf("outInf1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmInf = lm(y ~ xInf)#
abline(lmInf, col = COL[1])#
#
dev.off()#
#
####
#
pdf("outLev1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yLev ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmLev = lm(yLev ~ xInf)#
abline(lmLev, col = COL[1])#
#
dev.off()#
#
####
#
pdf("outOut1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmOut = lm(yOut~ x)#
abline(lmOut, col = COL[1])#
#
dev.off()#
#
###
###
#
x = seq(1,50,1)#
#
y = 3 * x + 3 + rnorm(length(x), mean = 0, sd = 10)#
#
xInf = c(x[1:49], -50)#
#
yInf = c(y[1:49], -300)#
#
yOut = c(y[1:25], y[26]+100, y[27:50])#
pdf("outInf2.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmInf = lm(y ~ xInf)#
abline(lmInf, col = COL[1])#
#
dev.off()#
#
####
#
pdf("outInf3.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yInf ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmLev = lm(yLev ~ xInf)#
abline(lmLev, col = COL[1])#
#
dev.off()#
#
####
#
pdf("outOut2.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmOut = lm(yOut~ x)#
abline(lmOut, col = COL[1])#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/outliers")#
#
set.seed(83629)#
x = seq(1,50,1)#
#
y = -2 * x + 20 + rnorm(length(x), mean = 0, sd = 10)#
#
xInf = c(x[1:49], 200)#
#
yLev = c(y[1:49], -370)#
#
yOut = c(y[1:25], y[26]+100, y[27:50])#
#
####
#
pdf("outInf1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmInf = lm(y ~ xInf)#
abline(lmInf, col = COL[1])#
#
dev.off()#
#
####
#
pdf("outLev1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yLev ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmLev = lm(yLev ~ xInf)#
abline(lmLev, col = COL[1])#
#
dev.off()#
#
####
#
pdf("outOut1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmOut = lm(yOut~ x)#
abline(lmOut, col = COL[1])#
#
dev.off()#
#
###
###
#
x = seq(1,50,1)#
#
y = 3 * x + 3 + rnorm(length(x), mean = 0, sd = 10)#
#
xInf = c(x[1:49], -50)#
#
yInf = c(y[1:49], -300)#
#
yOut = c(y[1:25], y[26]+100, y[27:50])#
pdf("outInf2.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmInf = lm(y ~ xInf)#
abline(lmInf, col = COL[1])#
#
dev.off()#
#
####
#
pdf("outInf3.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yInf ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmLev = lm(yLev ~ xInf)#
abline(lmLev, col = COL[1])#
#
dev.off()#
#
####
#
pdf("outOut2.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmOut = lm(yOut~ x)#
abline(lmOut, col = COL[1])#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/outliers")#
#
set.seed(83629)#
x = seq(1,50,1)#
#
y = -2 * x + 20 + rnorm(length(x), mean = 0, sd = 10)#
#
xInf = c(x[1:49], 200)#
#
yLev = c(y[1:49], -370)#
#
yOut = c(y[1:25], y[26]+100, y[27:50])#
#
####
#
pdf("outInf1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmInf = lm(y ~ xInf)#
abline(lmInf, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outLev1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yLev ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmLev = lm(yLev ~ xInf)#
abline(lmLev, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outOut1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmOut = lm(yOut~ x)#
abline(lmOut, col = COL[2])#
#
dev.off()#
#
###
###
#
x = seq(1,50,1)#
#
y = 3 * x + 3 + rnorm(length(x), mean = 0, sd = 10)#
#
xInf = c(x[1:49], -50)#
#
yInf = c(y[1:49], -300)#
#
yOut = c(y[1:25], y[26]+100, y[27:50])#
pdf("outInf2.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmInf = lm(y ~ xInf)#
abline(lmInf, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outInf3.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yInf ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmLev = lm(yLev ~ xInf)#
abline(lmLev, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outOut2.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.5)#
#
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmOut = lm(yOut~ x)#
abline(lmOut, col = COL[2])#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/outliers")#
#
set.seed(83629)#
x = seq(1,50,1)#
#
y = -2 * x + 20 + rnorm(length(x), mean = 0, sd = 10)#
#
xInf = c(x[1:49], 200)#
#
yLev = c(y[1:49], -370)#
#
yOut = c(y[1:25], y[26]+100, y[27:50])#
#
####
#
pdf("outInf1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.75)#
#
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmInf = lm(y ~ xInf)#
abline(lmInf, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outLev1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.75)#
#
plot(yLev ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmLev = lm(yLev ~ xInf)#
abline(lmLev, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outOut1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.75)#
#
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmOut = lm(yOut~ x)#
abline(lmOut, col = COL[2])#
#
dev.off()#
#
###
###
#
x = seq(1,50,1)#
#
y = 3 * x + 3 + rnorm(length(x), mean = 0, sd = 10)#
#
xInf = c(x[1:49], -50)#
#
yInf = c(y[1:49], -300)#
#
yOut = c(y[1:25], y[26]+100, y[27:50])#
pdf("outInf2.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.75)#
#
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmInf = lm(y ~ xInf)#
abline(lmInf, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outInf3.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.75)#
#
plot(yInf ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmLev = lm(yLev ~ xInf)#
abline(lmLev, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outOut2.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.axis = 1.75)#
#
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmOut = lm(yOut~ x)#
abline(lmOut, col = COL[2])#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/outliers")#
#
set.seed(83629)#
x = seq(1,50,1)#
#
y = -2 * x + 20 + rnorm(length(x), mean = 0, sd = 10)#
#
xInf = c(x[1:49], 200)#
#
yLev = c(y[1:49], -370)#
#
yOut = c(y[1:25], y[26]+100, y[27:50])#
#
####
#
pdf("outInf1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)#
#
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmInf = lm(y ~ xInf)#
abline(lmInf, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outLev1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)#
#
plot(yLev ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmLev = lm(yLev ~ xInf)#
abline(lmLev, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outOut1.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)#
#
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmOut = lm(yOut~ x)#
abline(lmOut, col = COL[2])#
#
dev.off()#
#
###
###
#
x = seq(1,50,1)#
#
y = 3 * x + 3 + rnorm(length(x), mean = 0, sd = 10)#
#
xInf = c(x[1:49], -50)#
#
yInf = c(y[1:49], -300)#
#
yOut = c(y[1:25], y[26]+100, y[27:50])#
pdf("outInf2.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)#
#
plot(y ~ xInf, pch = 19, col=COL[1], xlab = "(a)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmInf = lm(y ~ xInf)#
abline(lmInf, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outInf3.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)#
#
plot(yInf ~ xInf, pch = 19, col=COL[1], xlab = "(b)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmLev = lm(yLev ~ xInf)#
abline(lmLev, col = COL[2])#
#
dev.off()#
#
####
#
pdf("outOut2.pdf", 5.5, 4.3)#
#
par(mar=c(2,1,1,1), las=1, mgp=c(1,0.7,0), cex.lab = 1.5)#
#
plot(yOut ~ x, pch = 19, col=COL[1], xlab = "(c)", ylab = "", xaxt = "n", yaxt = "n", cex.lab = 1.5)#
#
lmOut = lm(yOut~ x)#
abline(lmOut, col = COL[2])#
#
dev.off()
load("/Users/mine/Dropbox/oiStatistics/package/openintro/data/countyComplete.rda")
names(countyComplete)
countyComplete$home_ownership[1:5]
load("/Users/mine/Dropbox/oiStatistics/package/openintro/data/house.rda")
names(house)
load("/Users/mine/Dropbox/oiStatistics/package/openintro/data/unempl.rda")
names(unempl)
load("/Users/mine/Dropbox/oiStatistics/package/openintro/data/census.rda")
names(census)
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/urbanOwner")
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(urbanOwner$percOwn ~ urbanOwner$percUrb, xlab='% urban population', ylab='% who own home \n', pch=20, col=COL[1], cex.lab = 1.5, cex.axis = 1.5)
urbanOwner = read.table("States - UrbanRuralPop.txt", h = T, sep = "\t")#
#
####
#
pdf("urbanOwnerWithDC.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(urbanOwner$percOwn ~ urbanOwner$percUrb, xlab='% urban population', ylab='% who own home \n', pch=20, col=COL[1], cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()
urbanOwner = read.csv("PctUrbanRural_State.txt")
urbanOwner = read.csv("PctUrbanRural_State.csv")
names(urbanOwner)
uo = read.csv("urbanOwner.csv")
uo = read.csv("urbanOwner.csv")
names(uo)
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/uo")#
#
uo = read.csv("urbanOwner.csv")#
#
####
#
pdf("urbanOwnerWithDC.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(uo$pct_owner_occupied ~ uo$poppct_urban, xlab='% urban population', ylab='% who own home \n', pch=20, col=COL[1])#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/urbanOwner")#
#
uo = read.csv("urbanOwner.csv")#
#
####
#
pdf("urbanOwnerWithDC.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(uo$pct_owner_occupied ~ uo$poppct_urban, xlab='% urban population', ylab='% who own home \n', pch=20, col=COL[1])#
#
dev.off()
pdf("urbanOwner_withDC.pdf", 5.5, 4.3)#
#
par(mar=c(4,6,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(uo$pct_owner_occupied ~ uo$poppct_urban, xlab='% urban population', ylab='% who own home \n', pch=20, col=COL[1])#
#
dev.off()
")
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/bac")#
#
bac = read.table("bac.txt", h = T, sep = "\t")
names(bac)
pdf("bloodAlc.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bac$BAC ~ bac$Beers, xlab='Cans of beer', ylab='BAC \n', pch=19, col=COL[1], cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()
pdf("bloodAlc.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bac$BAC ~ bac$Beers, xlab='Cans of beer', ylab='BAC \n', pch=19, col=COL[1], cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/bodyMeas")
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hgt, xlab="Height (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()
pdf("bodyWgtHgt.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hgt, xlab="Height (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/bodyMeas")#
#
library(openintro)#
data(bdims)#
#
####
#
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$hgt ~ bdims$sho.gi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()#
#
####
#
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), ylim = c(40,120))#
#
dev.off()#
#
####
#
cor(bm$Hgt, bm$ShoGi)#
mean(bm$Hgt)#
sd(bm$Hgt)#
mean(bm$ShoGi)#
sd(bm$ShoGi)#
#
####
#
pdf("bodyWgtHgt.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hgt, xlab="Height (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()#
#
###
#
library(xtable)#
#
xtable(summary(lm(bm$Wgt ~ bm$Hgt)))
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/bodyMeas")#
#
library(openintro)#
data(bdims)#
#
####
#
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$hgt ~ bdims$sho.gi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()#
#
####
#
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), ylim = c(40,120))#
#
dev.off()#
#
####
#
cor(bdims$Hgt, bdims$ShoGi)#
mean(bdims$Hgt)#
sd(bdims$Hgt)#
mean(bdims$ShoGi)#
sd(bdims$ShoGi)#
#
####
#
pdf("bodyWgtHgt.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hgt, xlab="Height (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()#
#
###
#
library(xtable)#
#
xtable(summary(lm(bdims$Wgt ~ bdims$Hgt)))
min(bdims$hgt)
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/bodyMeas")#
#
library(openintro)#
data(bdims)#
#
####
#
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$hgt ~ bdims$sho.gi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()#
#
####
#
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), ylim = c(40,120))#
#
dev.off()#
#
####
#
cor(bdims$Hgt, bdims$ShoGi)#
mean(bdims$Hgt)#
sd(bdims$Hgt)#
mean(bdims$ShoGi)#
sd(bdims$ShoGi)#
#
####
#
pdf("bodyWgtHgt.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hgt, xlab="Height (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), axes = FALSE, xlim = 140,210)#
axis(1, at = seq(150,200,25))#
axis(2)#
box()#
#
dev.off()#
#
###
#
library(xtable)#
#
xtable(summary(lm(bdims$wgt ~ bdims$hgt)))
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$hgt ~ bdims$sho.gi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), ylim = c(40,120))#
#
dev.off()
pdf("bodyWgtHgt.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hgt, xlab="Height (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), axes = FALSE, xlim = c(140,210))#
axis(1, at = seq(150,200,25))#
axis(2)#
box()#
#
dev.off()
pdf("bodyWgtHgt.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(bdims$wgt ~ bdims$hgt, xlab="Height (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), axes = FALSE, xlim = c(145,205))#
axis(1, at = seq(150,200,25))#
axis(2)#
box()#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/bodyMeas")#
#
library(openintro)#
data(bdims)#
#
####
#
pdf("bodyHgtShoGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(bdims$hgt ~ bdims$sho.gi, xlab="Shoulder girth (in cm)", ylab="Height (in cm)", pch=19, col=fadeColor(COL[1],90))#
#
dev.off()#
#
####
#
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(bdims$wgt ~ bdims$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), ylim = c(40,120))#
#
dev.off()#
#
####
#
cor(bdims$Hgt, bdims$ShoGi)#
mean(bdims$Hgt)#
sd(bdims$Hgt)#
mean(bdims$ShoGi)#
sd(bdims$ShoGi)#
#
####
#
pdf("bodyWgtHgt.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(bdims$wgt ~ bdims$hgt, xlab="Height (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), axes = FALSE, xlim = c(145,205))#
axis(1, at = seq(150,200,25))#
axis(2)#
box()#
#
dev.off()#
#
###
#
library(xtable)#
#
xtable(summary(lm(bdims$wgt ~ bdims$hgt)))
pdf("bodyWgtHgt.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(bdims$wgt ~ bdims$hgt, xlab="Height (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), axes = FALSE, xlim = c(145,205))#
axis(1, at = seq(150,200,25))#
axis(2)#
box()#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/husbandsWives")#
#
hw = read.table("husbandsWives.txt", h = T, sep = "\t")#
#
# convert height to inches#
#
hw$Ht_Husband_in = hw$Ht_Husband / 25.4#
hw$Ht_Wife_in = hw$Ht_Wife / 25.4#
#
hwSub = hw[!is.na(hw$Age_Wife),]#
hw = hwSub#
#
####
#
pdf("husbandsWives_age.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(hw$Age_Wife ~ hw$Age_Husband, xlab="Husband's age (in years)", ylab="Wife's age (in years)", pch=19, col=fadeColor(COL[1],80), xlim = c(18, 66), ylim = c(16, 66), axes = FALSE)#
axis(1, at = seq(20,60,20))#
axis(2, at = seq(20,60,20))#
box()#
#
dev.off()#
#
####
#
pdf("husbandsWives_height.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.3,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(hw$Ht_Wife_in ~ hw$Ht_Husband_in, xlab="Husband's height (in inches)", ylab="Wife's height (in inches)", pch=19, col=fadeColor(COL[1],80), xlim = c(60, 77), ylim = c(55, 70), axes = FALSE)#
axis(1, at = seq(60,75,5))#
axis(2, at = seq(55,70,5))#
box()#
#
dev.off()#
#
####
#
# lm output#
#
library(xtable)#
#
xtable(summary(lm(hw$Age_Wife ~ hw$Age_Husband)))#
#
xtable(summary(lm(hw$Ht_Wife_in ~ hw$Ht_Husband_in)))
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/husbandsWives")#
#
hw = read.table("husbandsWives.txt", h = T, sep = "\t")#
#
# convert height to inches#
#
hw$Ht_Husband_in = hw$Ht_Husband / 25.4#
hw$Ht_Wife_in = hw$Ht_Wife / 25.4#
#
hwSub = hw[!is.na(hw$Age_Wife),]#
hw = hwSub#
#
####
#
pdf("husbandsWives_age.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(hw$Age_Wife ~ hw$Age_Husband, xlab="Husband's age (in years)", ylab="Wife's age (in years)", pch=19, col=fadeColor(COL[1],80), xlim = c(18, 66), ylim = c(16, 66), axes = FALSE)#
axis(1, at = seq(20,60,20))#
axis(2, at = seq(20,60,20))#
box()#
#
dev.off()#
#
####
#
pdf("husbandsWives_height.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(hw$Ht_Wife_in ~ hw$Ht_Husband_in, xlab="Husband's height (in inches)", ylab="Wife's height (in inches)", pch=19, col=fadeColor(COL[1],80), xlim = c(60, 77), ylim = c(55, 70), axes = FALSE)#
axis(1, at = seq(60,75,5))#
axis(2, at = seq(55,70,5))#
box()#
#
dev.off()#
#
####
#
# lm output#
#
library(xtable)#
#
xtable(summary(lm(hw$Age_Wife ~ hw$Age_Husband)))#
#
xtable(summary(lm(hw$Ht_Wife_in ~ hw$Ht_Husband_in)))
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/husbandsWives")#
#
hw = read.table("husbandsWives.txt", h = T, sep = "\t")#
#
# convert height to inches#
#
hw$Ht_Husband_in = hw$Ht_Husband / 25.4#
hw$Ht_Wife_in = hw$Ht_Wife / 25.4#
#
hwSub = hw[!is.na(hw$Age_Wife),]#
hw = hwSub#
#
####
#
pdf("husbandsWives_age.pdf", 5.5, 4.3)#
#
par(mar=c(3.75,3.75,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(hw$Age_Wife ~ hw$Age_Husband, xlab="Husband's age (in years)", ylab="Wife's age (in years)", pch=19, col=fadeColor(COL[1],80), xlim = c(18, 66), ylim = c(16, 66), axes = FALSE)#
axis(1, at = seq(20,60,20))#
axis(2, at = seq(20,60,20))#
box()#
#
dev.off()#
#
####
#
pdf("husbandsWives_height.pdf", 5.5, 4.3)#
#
par(mar=c(3.5,3.5,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(hw$Ht_Wife_in ~ hw$Ht_Husband_in, xlab="Husband's height (in inches)", ylab="Wife's height (in inches)", pch=19, col=fadeColor(COL[1],80), xlim = c(60, 77), ylim = c(55, 70), axes = FALSE)#
axis(1, at = seq(60,75,5))#
axis(2, at = seq(55,70,5))#
box()#
#
dev.off()#
#
####
#
# lm output#
#
library(xtable)#
#
xtable(summary(lm(hw$Age_Wife ~ hw$Age_Husband)))#
#
xtable(summary(lm(hw$Ht_Wife_in ~ hw$Ht_Husband_in)))
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/husbandsWives")#
#
hw = read.table("husbandsWives.txt", h = T, sep = "\t")#
#
# convert height to inches#
#
hw$Ht_Husband_in = hw$Ht_Husband / 25.4#
hw$Ht_Wife_in = hw$Ht_Wife / 25.4#
#
hwSub = hw[!is.na(hw$Age_Wife),]#
hw = hwSub#
#
####
#
pdf("husbandsWives_age.pdf", 5.5, 4.3)#
#
par(mar=c(3.75,3.75,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(hw$Age_Wife ~ hw$Age_Husband, xlab="Husband's age (in years)", ylab="Wife's age (in years)", pch=19, col=fadeColor(COL[1],80), xlim = c(18, 66), ylim = c(16, 66), axes = FALSE)#
axis(1, at = seq(20,60,20))#
axis(2, at = seq(20,60,20))#
box()#
#
dev.off()#
#
####
#
pdf("husbandsWives_height.pdf", 5.5, 4.3)#
#
par(mar=c(3.75,3.75,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(hw$Ht_Wife_in ~ hw$Ht_Husband_in, xlab="Husband's height (in inches)", ylab="Wife's height (in inches)", pch=19, col=fadeColor(COL[1],80), xlim = c(60, 77), ylim = c(55, 70), axes = FALSE)#
axis(1, at = seq(60,75,5))#
axis(2, at = seq(55,70,5))#
box()#
#
dev.off()#
#
####
#
# lm output#
#
library(xtable)#
#
xtable(summary(lm(hw$Age_Wife ~ hw$Age_Husband)))#
#
xtable(summary(lm(hw$Ht_Wife_in ~ hw$Ht_Husband_in)))
uo_noDC = uo[uo$state != "District of Columbia",]
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/urbanOwner")
pdf("urbanOwner_withoutDC.pdf", 5.5, 7)#
#
lmPlot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, col = COL[1], xlab='% urban population', ylab='% who own home \n', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5, cex.lab = 1.25, cex.axis = 1.25)#
#
dev.off()
pdf("urbanOwner_withoutDC.pdf", 5.5, 7)#
#
lmPlot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, col = COL[1], xlab='% urban population', ylab='% who own home \n', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5, cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()
pdf("urbanOwner_withoutDC.pdf", 5.5, 7)#
#
par(mar=c(4,6,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
lmPlot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, col = COL[1], xlab='% urban population', ylab='% who own home \n', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5, cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()
?lmPlot
pdf("urbanOwner_withoutDC.pdf", 5.5, 7)#
#
par(mar=c(2,4,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
lmPlot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, col = COL[1], xlab='% urban population', ylab='% who own home \n', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5, cex.lab = 1.5, cex.axis = 1.5, parCustom = TRUE)#
#
dev.off()
pdf("urbanOwner_withoutDC.pdf", 5.5, 7)#
#
lmPlot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, col = COL[1], xlab='% urban population', ylab='% who own home \n', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5, cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()
pdf("urbanOwner_withoutDC.pdf", 5.5, 7)#
#
lmPlot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, col = COL[1], xlab='% urban population', ylab='% who own home', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5, cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/prof")
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/prof")#
#
prof = read.csv(file = "ProfEvaltnsBeautyPublic.csv", header = TRUE, stringsAsFactors = FALSE)#
#
# Rename the two variables for convenience#
beauty <- d$btystdave#
eval <- d$courseevaluation#
beauty_eval_lm = lm(eval ~ beauty)#
#
# Make a scatterplot#
pdf("beauty_eval.pdf", height = 5, width = 5)#
#
plot(x = beauty, y = eval, xlab="beauty", ylab="teaching evaluation", pch = 19, col = fadeColor("black",66), cex = 0.9, cex.lab = 1.25)#
#
dev.off()#
#
# residuals plot#
#
pdf("beauty_eval_res.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals ~ beauty, xlab = "beauty", ylab = "residuals", pch = 19, col = fadeColor("black",66), cex.lab = 1.25)#
abline(h = 0, lty = 3)#
#
dev.off()#
#
# normal residuals - histogram#
pdf("beauty_eval_res_hist.pdf", height = 5, width = 5)#
#
hist(beauty_eval_lm$residuals, xlab = "residuals", main = "Histogram of residuals", cex.lab = 1.25, cex.main = 1.25)#
#
dev.off()#
#
# #
#
pdf("beauty_eval_res_qq.pdf", height = 5, width = 5)#
#
qqnorm(beauty_eval_lm$residuals, pch = 19, col = fadeColor("black",66), cex.lab = 1.25, cex.main = 1.25)#
qqline(beauty_eval_lm$residuals)#
#
dev.off()#
#
##
#
pdf("beauty_eval_res_order.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals, xlab = "order of data collection", pch = 19, col = fadeColor("black",66), ylab = "residuals", cex.lab = 1.25, cex.main = 1.25)#
abline(h = 0, lty = 3)#
#
dev.off()
Rename the two variables for convenience#
beauty <- d$btystdave#
eval <- d$courseevaluation#
beauty_eval_lm = lm(eval ~ beauty)
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/prof")#
#
d = read.csv(file = "ProfEvaltnsBeautyPublic.csv", header = TRUE, stringsAsFactors = FALSE)#
#
# Rename the two variables for convenience#
beauty <- d$btystdave#
eval <- d$courseevaluation#
beauty_eval_lm = lm(eval ~ beauty)#
#
# Make a scatterplot#
pdf("beauty_eval.pdf", height = 5, width = 5)#
#
plot(x = beauty, y = eval, xlab="beauty", ylab="teaching evaluation", pch = 19, col = fadeColor("black",66), cex = 0.9, cex.lab = 1.25)#
#
dev.off()#
#
# residuals plot#
#
pdf("beauty_eval_res.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals ~ beauty, xlab = "beauty", ylab = "residuals", pch = 19, col = fadeColor("black",66), cex.lab = 1.25)#
abline(h = 0, lty = 3)#
#
dev.off()#
#
# normal residuals - histogram#
pdf("beauty_eval_res_hist.pdf", height = 5, width = 5)#
#
hist(beauty_eval_lm$residuals, xlab = "residuals", main = "Histogram of residuals", cex.lab = 1.25, cex.main = 1.25)#
#
dev.off()#
#
# #
#
pdf("beauty_eval_res_qq.pdf", height = 5, width = 5)#
#
qqnorm(beauty_eval_lm$residuals, pch = 19, col = fadeColor("black",66), cex.lab = 1.25, cex.main = 1.25)#
qqline(beauty_eval_lm$residuals)#
#
dev.off()#
#
##
#
pdf("beauty_eval_res_order.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals, xlab = "order of data collection", pch = 19, col = fadeColor("black",66), ylab = "residuals", cex.lab = 1.25, cex.main = 1.25)#
abline(h = 0, lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/prof")#
#
d = read.csv(file = "ProfEvaltnsBeautyPublic.csv", header = TRUE, stringsAsFactors = FALSE)#
#
# Rename the two variables for convenience#
beauty <- d$btystdave#
eval <- d$courseevaluation#
beauty_eval_lm = lm(eval ~ beauty)
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/prof")#
#
d = read.csv(file = "ProfEvaltnsBeautyPublic.csv", header = TRUE, stringsAsFactors = FALSE)#
#
# Rename the two variables for convenience#
beauty <- d$btystdave#
eval <- d$courseevaluation#
beauty_eval_lm = lm(eval ~ beauty)
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/prof")#
#
d = read.csv(file = "ProfEvaltnsBeautyPublic.csv", header = TRUE, stringsAsFactors = FALSE)#
#
# Rename the two variables for convenience#
beauty <- d$btystdave#
eval <- d$courseevaluation#
beauty_eval_lm = lm(eval ~ beauty)#
#
# Make a scatterplot#
pdf("beauty_eval.pdf", height = 5, width = 5)#
#
plot(x = beauty, y = eval, xlab="beauty", ylab="teaching evaluation", pch = 19, col = fadeColor(COL[1],80), cex = 0.9, cex.lab = 1.5)#
#
dev.off()#
#
# residuals plot#
#
pdf("beauty_eval_res.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals ~ beauty, xlab = "beauty", ylab = "residuals", pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5)#
abline(h = 0, lty = 3)#
#
dev.off()#
#
# normal residuals - histogram#
pdf("beauty_eval_res_hist.pdf", height = 5, width = 5)#
#
hist(beauty_eval_lm$residuals, xlab = "residuals", main = "Histogram of residuals", cex.lab = 1.5, cex.main = 1.25)#
#
dev.off()#
#
# #
#
pdf("beauty_eval_res_qq.pdf", height = 5, width = 5)#
#
qqnorm(beauty_eval_lm$residuals, pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5, cex.main = 1.25)#
qqline(beauty_eval_lm$residuals)#
#
dev.off()#
#
##
#
pdf("beauty_eval_res_order.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals, xlab = "order of data collection", pch = 19, col = fadeColor(COL[1],80), ylab = "residuals", cex.lab = 1.5, main = "")#
abline(h = 0, lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/urbanOwner")#
#
uo = read.csv("urbanOwner.csv")#
#
####
#
pdf("urbanOwner_withDC.pdf", 5.5, 4.3)#
#
par(mar=c(4,6,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(uo$pct_owner_occupied ~ uo$poppct_urban, xlab='% urban population', ylab='% who own home', pch=20, col=COL[1])#
#
dev.off()#
#
####
#
# drop DC#
#
uo_noDC = uo[uo$state != "District of Columbia",]#
#
####
pdf("urbanOwner_withoutDC_noRes.pdf", 5.5, 7)#
#
par(mar=c(4,6,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, xlab='% urban population', ylab='% who own home', pch=20, col=COL[1])#
#
dev.off()#
#
####
#
pdf("urbanOwner_withoutDC.pdf", 5.5, 7)#
#
lmPlot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, col = COL[1], xlab='% urban population', ylab='% who own home', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5, cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()#
#setwd("/Users/mine/Desktop/Open Intro/Chp 7 - EOCE/figures")#
#
pdf("uoWithoutDC.pdf", 5.5, 4.3)#
#
par(mar=c(3.6,5.2,1,1), las=1, mgp=c(2.5,0.7,0))#
#
plot(uo$percOwn ~ uo$percUrb, xlab='% urban population', ylab='% who own home \n', pch=20, col=COL[2], cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()#
#
####
#
# lm output#
#
library(xtable)#
#
lmUO = lm(uo$percOwn ~ uo$percUrb)#
#
xtable(summary(lmUO))#
#
####
#
#setwd("/Users/mine/Desktop/Open Intro/Chp 7 - EOCE/figures")#
#
pdf("uoWithoutDCWithLine.pdf", 5.5, 4.3)#
#
par(mar=c(3.6,5.2,1,1), las=1, mgp=c(2.5,0.7,0))#
#
plot(uo$percOwn ~ uo$percUrb, xlab='% urban population', ylab='% who own home \n', pch=19, col=COL[2], cex.lab = 1.5, cex.axis = 1.5)#
abline(lmUO, col = COL[1])#
points(x = 0.4, y = 0.7976 - 0.1616 * 0.4, col = "red", pch = 19)#
text(x = 0.4, y = 0.7976 - 0.1616 * 0.4, pos = 4, offset = 0.2, labels = "(x = 0.4, y = 0.73)")#
points(x = 0.8, y = 0.7976 - 0.1616 * 0.8, col = "red", pch = 19)#
text(x = 0.8, y = 0.7976 - 0.1616 * 0.8, pos = 1, offset = 0.2, labels = "(x = 0.8, y = 0.67)")#
#
dev.off()#
#
####
#
# res plot#
#
#setwd("/Users/mine/Desktop/Open Intro/Chp 7 - EOCE/figures")#
#
pdf("uoWithoutDCRes.pdf", 5.5, 2.15)#
#
par(mar=c(3,3.2,1,1), las=1, mgp=c(2,0.7,0))#
#
plot(lmUO$residuals ~ uo$percUrb, xlab='% urban population', ylab='Residuals', pch=20, col=COL[2], cex.lab = 1.5, cex.axis = 1.5, axes = FALSE, ylim = c(-0.1,0.1))#
axis(1, seq(0.4, 0.9, 0.1))#
axis(2, at = c(-0.1, 0, 0.1))#
box()#
#
abline(h = 0, lty = 2)#
#
dev.off()
par(mar=c(4,6,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, xlab='% urban population', ylab='% who own home', pch=20, col=COL[1])#
abline(lm(uo_noDC$pct_owner_occupied~uo_noDC$poppct_urban), col = COL[2], lwd = 2)
par(mar=c(4,6,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, xlab='% urban population', ylab='% who own home', pch=20, col=COL[1])#
abline(lm(uo_noDC$pct_owner_occupied~uo_noDC$poppct_urban), col = COL[2], lwd = 2)
pdf("urbanOwner_withoutDC_noRes.pdf", 5.5, 7)#
#
par(mar=c(4,5,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.25, cex.axis = 1.25)#
#
plot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, xlab='% urban population', ylab='% who own home', pch=20, col=COL[1])#
abline(lm(uo_noDC$pct_owner_occupied~uo_noDC$poppct_urban), col = COL[2], lwd = 2)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/urbanOwner")#
#
uo = read.csv("urbanOwner.csv")#
#
####
#
pdf("urbanOwner_withDC.pdf", 5.5, 4.3)#
#
par(mar=c(4,6,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(uo$pct_owner_occupied ~ uo$poppct_urban, xlab='% urban population', ylab='% who own home', pch=20, col=COL[1])#
#
dev.off()#
#
####
#
# drop DC#
#
uo_noDC = uo[uo$state != "District of Columbia",]#
#
####
pdf("urbanOwner_withoutDC_noRes.pdf", 5.5, 7)#
#
par(mar=c(4,5,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, xlab='% urban population', ylab='% who own home', pch=20, col=COL[1])#
abline(lm(uo_noDC$pct_owner_occupied~uo_noDC$poppct_urban), col = COL[2], lwd = 2)#
#
dev.off()#
#
####
#
pdf("urbanOwner_withoutDC.pdf", 5.5, 7)#
#
lmPlot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, col = COL[1], xlab='% urban population', ylab='% who own home', lCol = COL[2], lwd = 2, resSymm = TRUE, resAxis = 3, xAxis = 5, yAxis = 5, cex.lab = 1.5, cex.axis = 1.5)#
#
dev.off()
pdf("urbanOwner_withoutDC_noRes.pdf", 5.5, 7)#
#
par(mar=c(4,5,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, xlab='% urban population', ylab='% who own home', pch=20, col=COL[1])#
abline(lm(uo_noDC$pct_owner_occupied~uo_noDC$poppct_urban), col = COL[2], lwd = 2)#
#
dev.off()
pdf("urbanOwner_withoutDC_noRes.pdf", 5.5, 4.3)#
#
par(mar=c(4,5,1,1), las=1, mgp=c(2.5,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(uo_noDC$poppct_urban, uo_noDC$pct_owner_occupied, xlab='% urban population', ylab='% who own home', pch=20, col=COL[1])#
abline(lm(uo_noDC$pct_owner_occupied~uo_noDC$poppct_urban), col = COL[2], lwd = 2)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/prof")#
#
d = read.csv(file = "ProfEvaltnsBeautyPublic.csv", header = TRUE, stringsAsFactors = FALSE)#
#
# Rename the two variables for convenience#
beauty <- d$btystdave#
eval <- d$courseevaluation#
beauty_eval_lm = lm(eval ~ beauty)#
#
# Make a scatterplot#
pdf("beauty_eval.pdf", height = 5, width = 5)#
#
plot(x = beauty, y = eval, xlab="beauty", ylab="teaching evaluation", pch = 19, col = fadeColor(COL[1],80), cex = 0.9, cex.lab = 1.5)#
#
dev.off()#
#
# residuals plot#
#
pdf("beauty_eval_res.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals ~ beauty, xlab = "beauty", ylab = "residuals", pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5)#
abline(h = 0, lty = 3)#
#
dev.off()#
#
# normal residuals - histogram#
pdf("beauty_eval_res_hist.pdf", height = 5, width = 5)#
#
hist(beauty_eval_lm$residuals, xlab = "residuals", main = "Histogram of residuals", cex.lab = 1.5, cex.axis = 1.5, col = COL[1])#
#
dev.off()#
#
# #
#
pdf("beauty_eval_res_qq.pdf", height = 5, width = 5)#
#
qqnorm(beauty_eval_lm$residuals, pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5, cex.axis = 1.5)#
qqline(beauty_eval_lm$residuals)#
#
dev.off()#
#
##
#
pdf("beauty_eval_res_order.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals, xlab = "order of data collection", pch = 19, col = fadeColor(COL[1],80), ylab = "residuals", cex.lab = 1.5, main = "")#
abline(h = 0, lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/prof")#
#
d = read.csv(file = "ProfEvaltnsBeautyPublic.csv", header = TRUE, stringsAsFactors = FALSE)#
#
# Rename the two variables for convenience#
beauty <- d$btystdave#
eval <- d$courseevaluation#
beauty_eval_lm = lm(eval ~ beauty)#
#
# Make a scatterplot#
pdf("beauty_eval.pdf", height = 5, width = 5)#
#
plot(x = beauty, y = eval, xlab="beauty", ylab="teaching evaluation", pch = 19, col = fadeColor(COL[1],80), cex = 0.9, cex.lab = 1.5)#
#
dev.off()#
#
# residuals plot#
#
pdf("beauty_eval_res.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals ~ beauty, xlab = "beauty", ylab = "residuals", pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5)#
abline(h = 0, lty = 3)#
#
dev.off()#
#
# normal residuals - histogram#
pdf("beauty_eval_res_hist.pdf", height = 5, width = 5)#
#
hist(beauty_eval_lm$residuals, xlab = "residuals", main = "Histogram of residuals", cex.lab = 1.5, cex.axis = 1.5, col = COL[1], main = "")#
#
dev.off()#
#
# #
#
pdf("beauty_eval_res_qq.pdf", height = 5, width = 5)#
#
qqnorm(beauty_eval_lm$residuals, pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5, cex.axis = 1.5)#
qqline(beauty_eval_lm$residuals)#
#
dev.off()#
#
##
#
pdf("beauty_eval_res_order.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals, xlab = "order of data collection", pch = 19, col = fadeColor(COL[1],80), ylab = "residuals", cex.lab = 1.5, main = "")#
abline(h = 0, lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/prof")#
#
d = read.csv(file = "ProfEvaltnsBeautyPublic.csv", header = TRUE, stringsAsFactors = FALSE)#
#
# Rename the two variables for convenience#
beauty <- d$btystdave#
eval <- d$courseevaluation#
beauty_eval_lm = lm(eval ~ beauty)#
#
# Make a scatterplot#
pdf("beauty_eval.pdf", height = 5, width = 5)#
#
plot(x = beauty, y = eval, xlab="beauty", ylab="teaching evaluation", pch = 19, col = fadeColor(COL[1],80), cex = 0.9, cex.lab = 1.5)#
#
dev.off()#
#
# residuals plot#
#
pdf("beauty_eval_res.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals ~ beauty, xlab = "beauty", ylab = "residuals", pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5)#
abline(h = 0, lty = 3)#
#
dev.off()#
#
# normal residuals - histogram#
pdf("beauty_eval_res_hist.pdf", height = 5, width = 5)#
#
hist(beauty_eval_lm$residuals, xlab = "residuals", main = "Histogram of residuals", cex.lab = 1.5, cex.axis = 1.5, col = COL[1], main = "")#
#
dev.off()#
#
# #
#
pdf("beauty_eval_res_qq.pdf", height = 5, width = 5)#
#
qqnorm(beauty_eval_lm$residuals, pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5, cex.axis = 1.5)#
qqline(beauty_eval_lm$residuals)#
#
dev.off()#
#
##
#
pdf("beauty_eval_res_order.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals, xlab = "order of data collection", pch = 19, col = fadeColor(COL[1],80), ylab = "residuals", cex.lab = 1.5, main = "")#
abline(h = 0, lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/prof")#
#
d = read.csv(file = "ProfEvaltnsBeautyPublic.csv", header = TRUE, stringsAsFactors = FALSE)#
#
# Rename the two variables for convenience#
beauty <- d$btystdave#
eval <- d$courseevaluation#
beauty_eval_lm = lm(eval ~ beauty)#
#
# Make a scatterplot#
pdf("beauty_eval.pdf", height = 5, width = 5)#
#
plot(x = beauty, y = eval, xlab="beauty", ylab="teaching evaluation", pch = 19, col = fadeColor(COL[1],80), cex = 0.9, cex.lab = 1.5)#
#
dev.off()#
#
# residuals plot#
#
pdf("beauty_eval_res.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals ~ beauty, xlab = "beauty", ylab = "residuals", pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5)#
abline(h = 0, lty = 3)#
#
dev.off()#
#
# normal residuals - histogram#
pdf("beauty_eval_res_hist.pdf", height = 5, width = 5)#
#
hist(beauty_eval_lm$residuals, xlab = "residuals", cex.lab = 1.5, cex.axis = 1.5, col = COL[1], main = "")#
#
dev.off()#
#
# #
#
pdf("beauty_eval_res_qq.pdf", height = 5, width = 5)#
#
qqnorm(beauty_eval_lm$residuals, pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5, cex.axis = 1.5)#
qqline(beauty_eval_lm$residuals)#
#
dev.off()#
#
##
#
pdf("beauty_eval_res_order.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals, xlab = "order of data collection", pch = 19, col = fadeColor(COL[1],80), ylab = "residuals", cex.lab = 1.5, main = "")#
abline(h = 0, lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/prof")#
#
d = read.csv(file = "ProfEvaltnsBeautyPublic.csv", header = TRUE, stringsAsFactors = FALSE)#
#
# Rename the two variables for convenience#
beauty <- d$btystdave#
eval <- d$courseevaluation#
beauty_eval_lm = lm(eval ~ beauty)#
#
# Make a scatterplot#
pdf("beauty_eval.pdf", height = 5, width = 5)#
#
plot(x = beauty, y = eval, xlab="beauty", ylab="teaching evaluation", pch = 19, col = fadeColor(COL[1],80), cex = 0.9, cex.lab = 1.5)#
#
dev.off()#
#
# residuals plot#
#
pdf("beauty_eval_res.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals ~ beauty, xlab = "beauty", ylab = "residuals", pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5)#
abline(h = 0, lty = 3)#
#
dev.off()#
#
# normal residuals - histogram#
pdf("beauty_eval_res_hist.pdf", height = 5, width = 5)#
#
hist(beauty_eval_lm$residuals, xlab = "residuals", cex.lab = 1.5, cex.axis = 1.5, col = COL[1], main = "")#
#
dev.off()#
#
# #
#
pdf("beauty_eval_res_qq.pdf", height = 5, width = 5)#
#
qqnorm(beauty_eval_lm$residuals, pch = 19, col = fadeColor(COL[1],80), cex.lab = 1.5, cex.axis = 1.5)#
qqline(beauty_eval_lm$residuals)#
#
dev.off()#
#
##
#
pdf("beauty_eval_res_order.pdf", height = 5, width = 5)#
#
plot(beauty_eval_lm$residuals, xlab = "order of data collection", pch = 19, col = fadeColor(COL[1],80), ylab = "residuals", cex.lab = 1.5, main = "", cex.lab = 1.5, cex.axis = 1.5)#
abline(h = 0, lty = 3)#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/bodyMeas")
pdf("bodyWgtHipGi.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(bdims$wgt ~ bdims$hip.gi, xlab="Hip girth (in cm)", ylab="Weight (in kg)", pch=19, col=fadeColor(COL[1],90), ylim = c(40,120), xlim = c(75,135))#
#
dev.off()
setwd("~/Desktop/Open Intro/EOCE - Second Edition/07/figures/eoce/helmet")
lunch = c(50,11,2,19,26,73,81,51,11,2,19,25)#
helmet = c(22.1, 35.9, 57.9, 22.2, 42.4, 5.8, 3.6, 21.4, 55.2, 33.3, 32.4, 38.4)#
pdf("lunch_helmet.pdf", 5.5, 4.3)#
#
par(mar=c(4,4,0.5,0.5), las=1, mgp=c(2.8,0.7,0), cex.lab = 1.5, cex.axis = 1.5)#
#
plot(x = lunch, y = helmet, ylab="% wearing helmets", xlab="% receiving reduced-fee lunch", pch=19, col=COL[1])#
#
dev.off()
q()
