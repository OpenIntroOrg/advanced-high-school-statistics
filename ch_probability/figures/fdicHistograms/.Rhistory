N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -1.27, 1.27)#
hist(h, breaks=500)
d[1:2,]
N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^5#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^6#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54, 2.54)#
hist(h, breaks=500)
N  <- 10^6#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54*2/3, 2.54*2/3)#
hist(h, breaks=500)
N  <- 10^6#
h  <- sample(H, N, TRUE, s) + runif(N, -2.54*2, 2.54*2)#
hist(h, breaks=500)
N  <- 10^6#
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 2.54)#
hist(h, breaks=500)
N  <- 10^6#
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 2.54)#
hist(h, breaks=500)
d[1,]
s  <- d$samplingWeight#
these <- (!is.na(s) & d$age > 17)#
BD <- d$birthDate[!is.na(s)]#
H  <- d$height1[!is.na(s)]#
s  <- s[!is.na(s)]#
rm(d)#
set.seed(50)
N  <- 10^6#
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 2.54)#
hist(h, breaks=500)
s  <- d$samplingWeight#
these <- (!is.na(s) & d$age > 17)#
BD <- d$birthDate[these]#
H  <- d$height1[these]#
s  <- s[these]
d <- read.delim('fdic.txt', TRUE, sep=',')#
s  <- d$samplingWeight#
these <- (!is.na(s) & d$age > 17)#
BD <- d$birthDate[these]#
H  <- d$height1[these]#
s  <- s[these]#
#rm(d)#
set.seed(50)
N  <- 10^6#
bd <- sample(BD, N, TRUE, s)#
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 2.54)#
hist(h, breaks=500)
N  <- 10^6#
bd <- sample(BD, N, TRUE, s)#
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 2.54)#
hist(h, breaks=500)
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 2)#
hist(h, breaks=500)
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 2)#
hist(h, breaks=500)
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 2)#
hist(h, breaks=500)
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 2)#
hist(h, breaks=500)
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)#
hist(h, breaks=500)
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)#
hist(h, breaks=500)
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)#
hist(h, breaks=500)
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)#
hist(h, breaks=500)
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)#
hist(h, breaks=500)
par(mfrow=2:3)#
hist(h, breaks=8)#
hist(h, breaks=25)#
hist(h, breaks=70)#
#
hist(h, breaks=200)#
hist(h, breaks=500)
par(mfrow=2:3)#
hist(h, breaks=8)#
hist(h, breaks=25)#
hist(h, breaks=40)#
#
hist(h, breaks=70)#
hist(h, breaks=200)#
#hist(h, breaks=500)#
#densityPlot(h)#
#
#hist(bd, breaks=0:366)
N  <- 3*10^6#
#bd <- sample(BD, N, TRUE, s)#
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)
N  <- 3*10^6#
#bd <- sample(BD, N, TRUE, s)#
h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)
par(mfrow=2:3)#
hist(h, breaks=8)#
hist(h, breaks=25)#
hist(h, breaks=40)#
#
hist(h, breaks=70)#
hist(h, breaks=200)#
#hist(h, breaks=500)#
#densityPlot(h)#
#
#hist(bd, breaks=0:366)
D
d
dens
dens <- density(h)
rm(d)
summary(h)
summary(dens)
ls()
rm(list=ls()[c(1:5,8:12)])
ls()
save.image('fdicContDist.RData')
H
min(h)
max(h)
x <- seq(112, 212, 0.5)
x
y <- rep(NA, 200)#
for(i in 1:200){#
	y[i] <- sum(h >= x[i] & h < x[i+1])#
}
plot(x,y)
plot(x[-1],y)
br <- x
counts <- y
br
counts
br
min(h)
max(h)
br[1:8]
counts <- counts[br > 115 & br < 208]#
br <- br[br > 115 & br < 208]
y
counts
counts <- counts[-1]
counts
plot(br[-1],counts)
ls()
rm(list=ls()[c(5:7)])
ls()
cbind(br[-1],counts)
max(h)
br <- br+0.5
cbind(br[-1],counts)
max(h)
min(h)
cbind(br[-1],counts)[1:5,]
ls()
rm(h)
save.image('fdicContDist.RData')
range(br)
class(density)
class(dens)
class(dens)
apply(cbind(br[-1], br[-length(br)]), 1, mean)
histPlot <- function(x, col='#22558855', border='#225588', breaks="Sturges", probability=FALSE, axes=TRUE, ylab=NULL, xlab=NULL, las=1, xlim=NULL, ylim=NULL, returnPar=FALSE, outline=FALSE, add=FALSE, lty=2, lwd=1, ...){#
    if(returnPar){#
    	old.par <- par(no.readonly = TRUE)#
    	on.exit(par(old.par))#
	}#
	if(is.list(x)){#
		histPlotUtil(x, col, border, breaks,#
			probability, axes, ylab, xlab, las,#
			xlim, ylim, returnPar, outline, add,#
			lty, lwd, ...)#
	}#
	H <- hist(x, breaks=breaks, plot=FALSE)#
	br <- H$breaks#
	mi <- H$mids#
	y <- H$counts#
	if(probability){#
		y <- H$density#
	}#
	if(is.null(ylab)){#
		ylab <- 'frequency'#
		if(probability){#
			ylab <- 'density'#
		}#
	}#
	if(is.null(xlab)){#
		xlab <- H$xname#
	}#
	if(is.null(xlim)){#
		xlim <- range(br)#
	}#
	if(is.null(ylim)){#
		ylim=c(0,max(y))#
	}#
	par(las=las)#
	if(!add){#
		plot(x, xlim=xlim, ylim=ylim, type='n', axes=FALSE, ylab=ylab, xlab=xlab)#
		abline(h=0)#
		if(axes){#
			axis(1)#
			axis(2)#
		}#
	}#
	if(outline){#
		n  <- length(H$breaks)#
		br <- c(br[1], br)#
		y  <- c(0, y, 0)#
		points(br, y, type='s', col=border, lty=lty, lwd=lwd)#
	} else {#
		miL <- length(mi)#
		for(i in 1:miL){#
			rect(br[i], 0, br[i+1], y[i],#
				border='#ffffff00', col=col)#
			lines(rep(br[i],2), c(0,y[i]), col=border)#
			lines(br[i:(i+1)], rep(y[i],2), col=border)#
			if(i > 1){#
				if(y[i] < y[i-1]){#
					lines(rep(br[i],2), y[(i-1):i], col=border)#
				}#
			}#
		}#
		lines(rep(br[miL+1],2), c(0,y[miL]), col=border)#
	}#
}#
#
histPlotUtil <- function(x, col, border, breaks, probability, axes, ylab, xlab, las, xlim, ylim, returnPar, outline, add, lty, lwd, ...){#
	br <- x[[1]]#
	mi <- apply(cbind(br[-1], br[-length(br)]), 1, mean)#
	y <- x[[2]]#
	if(probability){#
		y <- y/sum(y)/(br[2]-br[1])#
	}#
	if(is.null(ylab)){#
		ylab <- 'frequency'#
		if(probability){#
			ylab <- 'density'#
		}#
	}#
	if(is.null(xlab)){#
		xlab <- 'x'#
	}#
	if(is.null(xlim)){#
		xlim <- range(br)#
	}#
	if(is.null(ylim)){#
		ylim=c(0,max(y))#
	}#
	par(las=las)#
	if(!add){#
		plot(x, xlim=xlim, ylim=ylim, type='n', axes=FALSE, ylab=ylab, xlab=xlab)#
		abline(h=0)#
		if(axes){#
			axis(1)#
			axis(2)#
		}#
	}#
	if(outline){#
		n  <- length(br)#
		br <- c(br[1], br)#
		y  <- c(0, y, 0)#
		points(br, y, type='s', col=border, lty=lty, lwd=lwd)#
	} else {#
		miL <- length(mi)#
		for(i in 1:miL){#
			rect(br[i], 0, br[i+1], y[i],#
				border='#ffffff00', col=col)#
			lines(rep(br[i],2), c(0,y[i]), col=border)#
			lines(br[i:(i+1)], rep(y[i],2), col=border)#
			if(i > 1){#
				if(y[i] < y[i-1]){#
					lines(rep(br[i],2), y[(i-1):i], col=border)#
				}#
			}#
		}#
		lines(rep(br[miL+1],2), c(0,y[miL]), col=border)#
	}#
	#
}
histPlot(list(br, counts))
histPlot <- function(x, col='#22558855', border='#225588', breaks="Sturges", probability=FALSE, axes=TRUE, ylab=NULL, xlab=NULL, las=1, xlim=NULL, ylim=NULL, returnPar=FALSE, outline=FALSE, add=FALSE, lty=2, lwd=1, ...){#
    if(returnPar){#
    	old.par <- par(no.readonly = TRUE)#
    	on.exit(par(old.par))#
	}#
	if(is.list(x)){#
		histPlotUtil(x, col, border, breaks,#
			probability, axes, ylab, xlab, las,#
			xlim, ylim, returnPar, outline, add,#
			lty, lwd, ...)#
		return()#
	}#
	H <- hist(x, breaks=breaks, plot=FALSE)#
	br <- H$breaks#
	mi <- H$mids#
	y <- H$counts#
	if(probability){#
		y <- H$density#
	}#
	if(is.null(ylab)){#
		ylab <- 'frequency'#
		if(probability){#
			ylab <- 'density'#
		}#
	}#
	if(is.null(xlab)){#
		xlab <- H$xname#
	}#
	if(is.null(xlim)){#
		xlim <- range(br)#
	}#
	if(is.null(ylim)){#
		ylim=c(0,max(y))#
	}#
	par(las=las)#
	if(!add){#
		plot(x, xlim=xlim, ylim=ylim, type='n', axes=FALSE, ylab=ylab, xlab=xlab)#
		abline(h=0)#
		if(axes){#
			axis(1)#
			axis(2)#
		}#
	}#
	if(outline){#
		n  <- length(H$breaks)#
		br <- c(br[1], br)#
		y  <- c(0, y, 0)#
		points(br, y, type='s', col=border, lty=lty, lwd=lwd)#
	} else {#
		miL <- length(mi)#
		for(i in 1:miL){#
			rect(br[i], 0, br[i+1], y[i],#
				border='#ffffff00', col=col)#
			lines(rep(br[i],2), c(0,y[i]), col=border)#
			lines(br[i:(i+1)], rep(y[i],2), col=border)#
			if(i > 1){#
				if(y[i] < y[i-1]){#
					lines(rep(br[i],2), y[(i-1):i], col=border)#
				}#
			}#
		}#
		lines(rep(br[miL+1],2), c(0,y[miL]), col=border)#
	}#
}#
#
histPlotUtil <- function(x, col, border, breaks, probability, axes, ylab, xlab, las, xlim, ylim, returnPar, outline, add, lty, lwd, ...){#
	br <- x[[1]]#
	mi <- apply(cbind(br[-1], br[-length(br)]), 1, mean)#
	y <- x[[2]]#
	if(probability){#
		y <- y/sum(y)/(br[2]-br[1])#
	}#
	if(is.null(ylab)){#
		ylab <- 'frequency'#
		if(probability){#
			ylab <- 'density'#
		}#
	}#
	if(is.null(xlab)){#
		xlab <- 'x'#
	}#
	if(is.null(xlim)){#
		xlim <- range(br)#
	}#
	if(is.null(ylim)){#
		ylim=c(0,max(y))#
	}#
	par(las=las)#
	if(!add){#
		plot(x, xlim=xlim, ylim=ylim, type='n', axes=FALSE, ylab=ylab, xlab=xlab)#
		abline(h=0)#
		if(axes){#
			axis(1)#
			axis(2)#
		}#
	}#
	if(outline){#
		n  <- length(br)#
		br <- c(br[1], br)#
		y  <- c(0, y, 0)#
		points(br, y, type='s', col=border, lty=lty, lwd=lwd)#
	} else {#
		miL <- length(mi)#
		for(i in 1:miL){#
			rect(br[i], 0, br[i+1], y[i],#
				border='#ffffff00', col=col)#
			lines(rep(br[i],2), c(0,y[i]), col=border)#
			lines(br[i:(i+1)], rep(y[i],2), col=border)#
			if(i > 1){#
				if(y[i] < y[i-1]){#
					lines(rep(br[i],2), y[(i-1):i], col=border)#
				}#
			}#
		}#
		lines(rep(br[miL+1],2), c(0,y[miL]), col=border)#
	}#
	#
}
histPlot(list(br, counts))
histPlot <- function(x, col='#22558855', border='#225588', breaks="Sturges", probability=FALSE, axes=TRUE, ylab=NULL, xlab=NULL, las=1, xlim=NULL, ylim=NULL, returnPar=FALSE, outline=FALSE, add=FALSE, lty=2, lwd=1, ...){#
    if(returnPar){#
    	old.par <- par(no.readonly = TRUE)#
    	on.exit(par(old.par))#
	}#
	if(is.list(x)){#
		histPlotUtil(x, col, border, breaks,#
			probability, axes, ylab, xlab, las,#
			xlim, ylim, returnPar, outline, add,#
			lty, lwd, ...)#
		invisible()#
	}#
	H <- hist(x, breaks=breaks, plot=FALSE)#
	br <- H$breaks#
	mi <- H$mids#
	y <- H$counts#
	if(probability){#
		y <- H$density#
	}#
	if(is.null(ylab)){#
		ylab <- 'frequency'#
		if(probability){#
			ylab <- 'density'#
		}#
	}#
	if(is.null(xlab)){#
		xlab <- H$xname#
	}#
	if(is.null(xlim)){#
		xlim <- range(br)#
	}#
	if(is.null(ylim)){#
		ylim=c(0,max(y))#
	}#
	par(las=las)#
	if(!add){#
		plot(x, xlim=xlim, ylim=ylim, type='n', axes=FALSE, ylab=ylab, xlab=xlab)#
		abline(h=0)#
		if(axes){#
			axis(1)#
			axis(2)#
		}#
	}#
	if(outline){#
		n  <- length(H$breaks)#
		br <- c(br[1], br)#
		y  <- c(0, y, 0)#
		points(br, y, type='s', col=border, lty=lty, lwd=lwd)#
	} else {#
		miL <- length(mi)#
		for(i in 1:miL){#
			rect(br[i], 0, br[i+1], y[i],#
				border='#ffffff00', col=col)#
			lines(rep(br[i],2), c(0,y[i]), col=border)#
			lines(br[i:(i+1)], rep(y[i],2), col=border)#
			if(i > 1){#
				if(y[i] < y[i-1]){#
					lines(rep(br[i],2), y[(i-1):i], col=border)#
				}#
			}#
		}#
		lines(rep(br[miL+1],2), c(0,y[miL]), col=border)#
	}#
}#
#
histPlotUtil <- function(x, col, border, breaks, probability, axes, ylab, xlab, las, xlim, ylim, returnPar, outline, add, lty, lwd, ...){#
	br <- x[[1]]#
	mi <- apply(cbind(br[-1], br[-length(br)]), 1, mean)#
	y <- x[[2]]#
	if(probability){#
		y <- y/sum(y)/(br[2]-br[1])#
	}#
	if(is.null(ylab)){#
		ylab <- 'frequency'#
		if(probability){#
			ylab <- 'density'#
		}#
	}#
	if(is.null(xlab)){#
		xlab <- 'x'#
	}#
	if(is.null(xlim)){#
		xlim <- range(br)#
	}#
	if(is.null(ylim)){#
		ylim=c(0,max(y))#
	}#
	par(las=las)#
	if(!add){#
		plot(x, xlim=xlim, ylim=ylim, type='n', axes=FALSE, ylab=ylab, xlab=xlab)#
		abline(h=0)#
		if(axes){#
			axis(1)#
			axis(2)#
		}#
	}#
	if(outline){#
		n  <- length(br)#
		br <- c(br[1], br)#
		y  <- c(0, y, 0)#
		points(br, y, type='s', col=border, lty=lty, lwd=lwd)#
	} else {#
		miL <- length(mi)#
		for(i in 1:miL){#
			rect(br[i], 0, br[i+1], y[i],#
				border='#ffffff00', col=col)#
			lines(rep(br[i],2), c(0,y[i]), col=border)#
			lines(br[i:(i+1)], rep(y[i],2), col=border)#
			if(i > 1){#
				if(y[i] < y[i-1]){#
					lines(rep(br[i],2), y[(i-1):i], col=border)#
				}#
			}#
		}#
		lines(rep(br[miL+1],2), c(0,y[miL]), col=border)#
	}#
	#
}
histPlot(list(br, counts))
histPlot <- function(x, col='#22558855', border='#225588', breaks="Sturges", probability=FALSE, axes=TRUE, ylab=NULL, xlab=NULL, las=1, xlim=NULL, ylim=NULL, returnPar=FALSE, outline=FALSE, add=FALSE, lty=2, lwd=1, ...){#
    if(returnPar){#
    	old.par <- par(no.readonly = TRUE)#
    	on.exit(par(old.par))#
	}#
	if(is.list(x)){#
		histPlotUtil(x, col, border, breaks,#
			probability, axes, ylab, xlab, las,#
			xlim, ylim, returnPar, outline, add,#
			lty, lwd, ...)#
		return(NULL)#
	}#
	H <- hist(x, breaks=breaks, plot=FALSE)#
	br <- H$breaks#
	mi <- H$mids#
	y <- H$counts#
	if(probability){#
		y <- H$density#
	}#
	if(is.null(ylab)){#
		ylab <- 'frequency'#
		if(probability){#
			ylab <- 'density'#
		}#
	}#
	if(is.null(xlab)){#
		xlab <- H$xname#
	}#
	if(is.null(xlim)){#
		xlim <- range(br)#
	}#
	if(is.null(ylim)){#
		ylim=c(0,max(y))#
	}#
	par(las=las)#
	if(!add){#
		plot(x, xlim=xlim, ylim=ylim, type='n', axes=FALSE, ylab=ylab, xlab=xlab)#
		abline(h=0)#
		if(axes){#
			axis(1)#
			axis(2)#
		}#
	}#
	if(outline){#
		n  <- length(H$breaks)#
		br <- c(br[1], br)#
		y  <- c(0, y, 0)#
		points(br, y, type='s', col=border, lty=lty, lwd=lwd)#
	} else {#
		miL <- length(mi)#
		for(i in 1:miL){#
			rect(br[i], 0, br[i+1], y[i],#
				border='#ffffff00', col=col)#
			lines(rep(br[i],2), c(0,y[i]), col=border)#
			lines(br[i:(i+1)], rep(y[i],2), col=border)#
			if(i > 1){#
				if(y[i] < y[i-1]){#
					lines(rep(br[i],2), y[(i-1):i], col=border)#
				}#
			}#
		}#
		lines(rep(br[miL+1],2), c(0,y[miL]), col=border)#
	}#
}#
#
histPlotUtil <- function(x, col, border, breaks, probability, axes, ylab, xlab, las, xlim, ylim, returnPar, outline, add, lty, lwd, ...){#
	br <- x[[1]]#
	mi <- apply(cbind(br[-1], br[-length(br)]), 1, mean)#
	y <- x[[2]]#
	if(probability){#
		y <- y/sum(y)/(br[2]-br[1])#
	}#
	if(is.null(ylab)){#
		ylab <- 'frequency'#
		if(probability){#
			ylab <- 'density'#
		}#
	}#
	if(is.null(xlab)){#
		xlab <- 'x'#
	}#
	if(is.null(xlim)){#
		xlim <- range(br)#
	}#
	if(is.null(ylim)){#
		ylim=c(0,max(y))#
	}#
	par(las=las)#
	if(!add){#
		plot(x, xlim=xlim, ylim=ylim, type='n', axes=FALSE, ylab=ylab, xlab=xlab)#
		abline(h=0)#
		if(axes){#
			axis(1)#
			axis(2)#
		}#
	}#
	if(outline){#
		n  <- length(br)#
		br <- c(br[1], br)#
		y  <- c(0, y, 0)#
		points(br, y, type='s', col=border, lty=lty, lwd=lwd)#
	} else {#
		miL <- length(mi)#
		for(i in 1:miL){#
			rect(br[i], 0, br[i+1], y[i],#
				border='#ffffff00', col=col)#
			lines(rep(br[i],2), c(0,y[i]), col=border)#
			lines(br[i:(i+1)], rep(y[i],2), col=border)#
			if(i > 1){#
				if(y[i] < y[i-1]){#
					lines(rep(br[i],2), y[(i-1):i], col=border)#
				}#
			}#
		}#
		lines(rep(br[miL+1],2), c(0,y[miL]), col=border)#
	}#
	#
}
histPlot(list(br, counts))
length(br)
length(br)/15
length(br)/5
length(br)/5/37
br
186/2
186/2/3
189/3
189/3/3
189/3/3/3
184/2
184/2/2
184/2/2/2
BR
COUNTS
BR <- list()#
BR[[1]] <- seq(110, 210, 20)#
BR[[2]] <- seq(115, 210, 5)#
BR[[3]] <- seq(110, 210, 2)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	for(j in 1:(length(BR[[1]])-1)){#
		COUNTS[[j]] <- sum(counts[br < BR[[i]] & br >= BR[[i]]])#
	}#
}
warnings()
COUNTS <- list()#
for(i in 1:4){#
	for(j in 1:(length(BR[[1]])-1)){#
		COUNTS[[i]][j] <- sum(counts[(br < BR[[i]])[-1] & (br >= BR[[i]]][-201]))#
	}#
}
br
counts
length(counts)
length(br)
COUNTS <- list()#
for(i in 1:4){#
	for(j in 1:(length(BR[[1]])-1)){#
		these <- br[-185] < BR[[i]] & br[-1] >= BR[[i]]#
		COUNTS[[i]][j] <- sum(counts[counts])#
	}#
}
COUNTS <- list()#
for(i in 1:4){#
	for(j in 1:(length(BR[[1]])-1)){#
		these <- br[-185] < BR[[i]][j] & br[-1] >= BR[[i]][j]#
		COUNTS[[i]][j] <- sum(counts[counts])#
	}#
}
BR
BR <- list()#
MIDS <- BR[-1]-0.25#
BR[[1]] <- seq(110, 210, 20)#
BR[[2]] <- seq(115, 210, 5)#
BR[[3]] <- seq(110, 210, 2)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	for(j in 1:(length(BR[[1]])-1)){#
		these <- MIDS < BR[[i]][j] & MIDS >= BR[[i]][j]#
		COUNTS[[i]][j] <- sum(counts[these])#
	}#
}
BR <- list()#
MIDS <- br[-1]-0.25#
BR[[1]] <- seq(110, 210, 20)#
BR[[2]] <- seq(115, 210, 5)#
BR[[3]] <- seq(110, 210, 2)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	for(j in 1:(length(BR[[1]])-1)){#
		these <- MIDS < BR[[i]][j] & MIDS >= BR[[i]][j]#
		COUNTS[[i]][j] <- sum(counts[these])#
	}#
}
MIDS
apply(cbind(MIDS < BR[[i]][j], MIDS >= BR[[i]][j]), 1, all)
j
j
BR[[i]][j]
BR <- list()#
MIDS <- br[-1]-0.25#
BR[[1]] <- seq(110, 210, 20)#
BR[[2]] <- seq(115, 210, 5)#
BR[[3]] <- seq(110, 210, 2)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	for(j in 1:(length(BR[[1]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j], MIDS >= BR[[i]][j]), 1, all)#
		COUNTS[[i]][j] <- sum(counts[these])#
	}#
}
i
j
		these <- apply(cbind(MIDS < BR[[i]][j], MIDS >= BR[[i]][j]), 1, all)#
		COUNTS[[i]][j] <- sum(counts[these])
these
BR <- list()#
MIDS <- br[-1]-0.25#
BR[[1]] <- seq(110, 210, 20)#
BR[[2]] <- seq(115, 210, 5)#
BR[[3]] <- seq(110, 210, 2)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	for(j in 1:(length(BR[[1]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		} else {#
			COUNTS[[i]][j] <- 0#
		}#
	}#
}
i
j
any(these)
COUNTS[[i]]
COUNTS <- list()#
for(i in 1:4){#
	COUNTS <- c()#
	for(j in 1:(length(BR[[1]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		} else {#
			COUNTS[[i]][j] <- 0#
		}#
	}#
}
i
j
COUNTS[[i]]
COUNTS[[i]][j]
COUNTS[[i]]
COUNTS[[i]][j] <- 0
j
COUNTS <- list()#
for(i in 1:4){#
	COUNTS <- rep(NA, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		} else {#
			COUNTS[[i]][j] <- 0#
		}#
	}#
}
i
j
COUNTS[[i]][j]
COUNTS[[i]][j]
COUNTS[[i]][1]
COUNTS[[i]]
length(BR[[i]])
length(BR[[i]])-1
rep(NA, length(BR[[i]])-1)
COUNTS <- list()#
for(i in 1:4){#
	COUNTS <- rep(0, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		}#
	}#
}
COUNTS
COUNTS <- list()#
for(i in 1:4){#
	COUNTS[[i]] <- rep(0, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		}#
	}#
}
COUNTS
these
COUNTS <- list()#
for(i in 1:4){#
	COUNTS[[i]] <- rep(0, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j+1], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		}#
	}#
}
COUNTS
histPlot(list(BR[[1]],COUNTS[[1]]))
histPlot(list(BR[[2]],COUNTS[[2]]))
histPlot(list(BR[[1]],COUNTS[[1]]))
histPlot(list(BR[[2]],COUNTS[[2]]))
histPlot(list(BR[[3]],COUNTS[[3]]))
histPlot(list(BR[[4]],COUNTS[[4]]))
BR <- list()#
MIDS <- br[-1]-0.25#
BR[[1]] <- seq(110, 210, 10)#
BR[[2]] <- seq(115, 210, 2.5)#
BR[[3]] <- seq(110, 210, 1.5)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	COUNTS[[i]] <- rep(0, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j+1], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		}#
	}#
}
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]))#
}
BR <- list()#
MIDS <- br[-1]-0.25#
BR[[1]] <- seq(110, 210, 10)#
BR[[2]] <- seq(115, 210, 2.5)#
BR[[3]] <- seq(110, 210, 1)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	COUNTS[[i]] <- rep(0, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j+1], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		}#
	}#
}#
#
#
#
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]))#
}
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(120, 205))#
}
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(130, 205))#
}
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(130, 210))#
}
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(130, 210), axes=FALSE)#
	axis(1)#
}
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(130, 210), axes=FALSE, xlab='height (cm)')#
	axis(1)#
}
#
#d <- read.delim('fdic.txt', TRUE, sep=',')#
#s  <- d$samplingWeight#
#these <- (!is.na(s) & d$age > 17)#
#BD <- d$birthDate[these]#
#H  <- d$height1[these]#
#s  <- s[these]#
#rm(d)#
#set.seed(50)#
#
#
#N  <- 3*10^6#
#bd <- sample(BD, N, TRUE, s)#
#h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)#
#br <- seq(116, 208, 0.5)#
#counts <- rep(NA, 200)#
#for(i in 1:200){#
#	counts[i] <- sum(h >= br[i] & h < br[i+1])#
#}#
#dens <- density(h)#
#counts <- counts[br > 115 & br < 208]#
#counts <- counts[-1]#
#br <- br[br > 115 & br < 208]#
#br <- br+0.5#
#
#br <- c(114.5, 115, 115.5, br, 208.5, 209)#
#counts <- c(0, 0, 0, counts, 0, 0)#
BR <- list()#
MIDS <- br[-1]-0.25#
BR[[1]] <- seq(110, 210, 10)#
BR[[2]] <- seq(115, 210, 2.5)#
BR[[3]] <- seq(110, 210, 1)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	COUNTS[[i]] <- rep(0, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j+1], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		}#
	}#
}#
#
#
#
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(130, 210), axes=FALSE, xlab='height (cm)')#
	axis(1)#
}
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(120, 210), axes=FALSE, xlab='height (cm)')#
	axis(1)#
}
counts
cbind(MIDS, counts)
count
count <- counts
counts[119]
counts[118]
counts[119] <- 43870
#
#d <- read.delim('fdic.txt', TRUE, sep=',')#
#s  <- d$samplingWeight#
#these <- (!is.na(s) & d$age > 17)#
#BD <- d$birthDate[these]#
#H  <- d$height1[these]#
#s  <- s[these]#
#rm(d)#
#set.seed(50)#
#
#
#N  <- 3*10^6#
#bd <- sample(BD, N, TRUE, s)#
#h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)#
#br <- seq(116, 208, 0.5)#
#counts <- rep(NA, 200)#
#for(i in 1:200){#
#	counts[i] <- sum(h >= br[i] & h < br[i+1])#
#}#
#dens <- density(h)#
#counts <- counts[br > 115 & br < 208]#
#counts <- counts[-1]#
#br <- br[br > 115 & br < 208]#
#br <- br+0.5#
#
#br <- c(114.5, 115, 115.5, br, 208.5, 209)#
#counts <- c(0, 0, 0, counts, 0, 0)#
BR <- list()#
MIDS <- br[-1]-0.25#
BR[[1]] <- seq(110, 210, 10)#
BR[[2]] <- seq(115, 210, 2.5)#
BR[[3]] <- seq(110, 210, 1)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	COUNTS[[i]] <- rep(0, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j+1], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		}#
	}#
}#
#
#
#
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(120, 210), axes=FALSE, xlab='height (cm)')#
	axis(1)#
}
coun
coun <- counts
cbind(MIDS, counts)
counts <- count
#
#d <- read.delim('fdic.txt', TRUE, sep=',')#
#s  <- d$samplingWeight#
#these <- (!is.na(s) & d$age > 17)#
#BD <- d$birthDate[these]#
#H  <- d$height1[these]#
#s  <- s[these]#
#rm(d)#
#set.seed(50)#
#
#
#N  <- 3*10^6#
#bd <- sample(BD, N, TRUE, s)#
#h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)#
#br <- seq(116, 208, 0.5)#
#counts <- rep(NA, 200)#
#for(i in 1:200){#
#	counts[i] <- sum(h >= br[i] & h < br[i+1])#
#}#
#dens <- density(h)#
#counts <- counts[br > 115 & br < 208]#
#counts <- counts[-1]#
#br <- br[br > 115 & br < 208]#
#br <- br+0.5#
#
#br <- c(114.5, 115, 115.5, br, 208.5, 209)#
#counts <- c(0, 0, 0, counts, 0, 0)#
#counts[118:121] <- c()#
BR <- list()#
MIDS <- br[-1]-0.25#
BR[[1]] <- seq(110, 210, 10)#
BR[[2]] <- seq(115, 210, 2.5)#
BR[[3]] <- seq(110, 210, 1)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	COUNTS[[i]] <- rep(0, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j+1], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		}#
	}#
}#
#
#
#
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(120, 210), axes=FALSE, xlab='height (cm)')#
	axis(1)#
}
plot(dens)
#
#d <- read.delim('fdic.txt', TRUE, sep=',')#
#s  <- d$samplingWeight#
#these <- (!is.na(s) & d$age > 17)#
#BD <- d$birthDate[these]#
#H  <- d$height1[these]#
#s  <- s[these]#
#rm(d)#
#set.seed(50)#
#
#
#N  <- 3*10^6#
#bd <- sample(BD, N, TRUE, s)#
#h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)#
#br <- seq(116, 208, 0.5)#
#counts <- rep(NA, 200)#
#for(i in 1:200){#
#	counts[i] <- sum(h >= br[i] & h < br[i+1])#
#}#
#dens <- density(h)#
#counts <- counts[br > 115 & br < 208]#
#counts <- counts[-1]#
#br <- br[br > 115 & br < 208]#
#br <- br+0.5#
#
#br <- c(114.5, 115, 115.5, br, 208.5, 209)#
#counts <- c(0, 0, 0, counts, 0, 0)#
#counts[118:121] <- c()#
BR <- list()#
MIDS <- br[-1]-0.25#
BR[[1]] <- seq(110, 210, 10)#
BR[[2]] <- seq(115, 210, 2.5)#
BR[[3]] <- seq(110, 210, 1)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	COUNTS[[i]] <- rep(0, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j+1], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		}#
	}#
}#
#
#
#
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(120, 210), axes=FALSE, xlab='height (cm)')#
	axis(1)#
}
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(135, 210), axes=FALSE, xlab='height (cm)')#
	axis(1)#
}
sum(counts)
140/2.54
140/2.54/12
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(125, 210), axes=FALSE, xlab='height (cm)')#
	axis(1)#
}
#
#d <- read.delim('fdic.txt', TRUE, sep=',')#
#s  <- d$samplingWeight#
#these <- (!is.na(s) & d$age > 17)#
#BD <- d$birthDate[these]#
#H  <- d$height1[these]#
#s  <- s[these]#
#rm(d)#
#set.seed(50)#
#
#
#N  <- 3*10^6#
#bd <- sample(BD, N, TRUE, s)#
#h  <- sample(H, N, TRUE, s) + rnorm(N, 0, 1.5)#
#br <- seq(116, 208, 0.5)#
#counts <- rep(NA, 200)#
#for(i in 1:200){#
#	counts[i] <- sum(h >= br[i] & h < br[i+1])#
#}#
#dens <- density(h)#
#counts <- counts[br > 115 & br < 208]#
#counts <- counts[-1]#
#br <- br[br > 115 & br < 208]#
#br <- br+0.5#
#
#br <- c(114.5, 115, 115.5, br, 208.5, 209)#
#counts <- c(0, 0, 0, counts, 0, 0)#
#counts[118:121] <- c()#
BR <- list()#
MIDS <- br[-1]-0.25#
BR[[1]] <- seq(110, 210, 10)#
BR[[2]] <- seq(115, 210, 2.5)#
BR[[3]] <- seq(110, 210, 1)#
BR[[4]] <- seq(110, 210, 0.5)#
COUNTS <- list()#
for(i in 1:4){#
	COUNTS[[i]] <- rep(0, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j+1], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		}#
	}#
}#
#
#
#
par(mfrow=c(2,2), mar=c(2.5, 1, 1, 1), mgp=c(1.5, 0.7, 0))#
for(i in 1:4){#
	histPlot(list(BR[[i]], COUNTS[[i]]), xlim=c(125, 210), axes=FALSE, xlab='height (cm)')#
	axis(1)#
}
MIDS > 180 & MIDS < 185
counts[MIDS > 180 & MIDS < 185]
counts[MIDS > 180 & MIDS < 185][1:5]
counts[MIDS > 180 & MIDS < 185][5:10]
sum(counts[MIDS > 180 & MIDS < 185][5:10])
sum(counts[MIDS > 180 & MIDS < 185][1:5])
sum(counts[MIDS > 180 & MIDS < 185][6:10])
sum(counts[MIDS > 180 & MIDS < 185])/3000000
sum(counts[MIDS > 180 & MIDS < 185])/30000
par(mfrow=c(1,1), mar=c(3, 1, 1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), xlim=c(125, 210), axes=FALSE, xlab='height (cm)')#
axis(1)
BR[[2]]
cbind(BR[[2]][-1], COUNTS[[2]])
cbind(BR[[2]][-39], COUNTS[[2]])
par(mfrow=c(1,1), mar=c(3, 1, 1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), xlim=c(125, 210), axes=FALSE, xlab='height (cm)')#
axis(1)#
rect(BR[[2]][27], 0, BR[[2]][28], COUNTS[[2]][27], col='#225588', border='#225588')
par(mfrow=c(1,1), mar=c(3, 1, 1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), xlim=c(125, 210), axes=FALSE, xlab='height (cm)')#
axis(1)#
rect(BR[[2]][27], 0, BR[[2]][28], COUNTS[[2]][27], col='#225588', border='#22558800')#
rect(BR[[2]][28], 0, BR[[2]][29], COUNTS[[2]][28], col='#225588', border='#22558800')
par(mfrow=c(1,1), mar=c(3, 1, 1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), xlim=c(125, 210), axes=FALSE, xlab='height (cm)')#
axis(1)#
rect(BR[[2]][27], 0, BR[[2]][28], COUNTS[[2]][27], col='#225588DD', border='#22558800')#
rect(BR[[2]][28], 0, BR[[2]][29], COUNTS[[2]][28], col='#225588DD', border='#22558800')
par(mfrow=c(1,1), mar=c(3, 1, 1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), xlim=c(125, 210), axes=FALSE, xlab='height (cm)')#
axis(1)#
rect(BR[[2]][27], 0, BR[[2]][28], COUNTS[[2]][27], col='#225588BB', border='#22558800')#
rect(BR[[2]][28], 0, BR[[2]][29], COUNTS[[2]][28], col='#225588BB', border='#22558800')
par(mfrow=c(1,1), mar=c(3, 1, 0.1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), xlim=c(125, 210), axes=FALSE, xlab='height (cm)')#
axis(1)#
rect(BR[[2]][27], 0, BR[[2]][28], COUNTS[[2]][27], col='#225588BB', border='#22558800')#
rect(BR[[2]][28], 0, BR[[2]][29], COUNTS[[2]][28], col='#225588BB', border='#22558800')
par(mfrow=c(1,1), mar=c(3, 1, 0.1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), xlim=c(125, 210), axes=FALSE, xlab='height (cm)', probability=TRUE)#
axis(1)
par(mfrow=c(1,1), mar=c(3, 1, 0.1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], col='#22558822', border='#22558855', COUNTS[[2]]), xlim=c(125, 210), axes=FALSE, xlab='height (cm)', probability=TRUE)#
axis(1)
par(mfrow=c(1,1), mar=c(3, 1, 0.1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), col='#22558822', border='#22558855', xlim=c(125, 210), axes=FALSE, xlab='height (cm)', probability=TRUE)#
axis(1)
#
par(mfrow=c(1,1), mar=c(3, 1, 0.1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), col='#22558818', border='#22558844', xlim=c(125, 210), axes=FALSE, xlab='height (cm)', probability=TRUE)#
axis(1)
par(mfrow=c(1,1), mar=c(3, 1, 0.1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), col='#22558818', border='#22558840', xlim=c(125, 210), axes=FALSE, xlab='height (cm)', probability=TRUE)#
axis(1)
#
par(mfrow=c(1,1), mar=c(3, 1, 0.1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), col='#22558818', border='#22558840', xlim=c(125, 210), axes=FALSE, xlab='height (cm)', probability=TRUE)#
axis(1)#
lines(dens$x, dens$y)
#
par(mfrow=c(1,1), mar=c(3, 1, 0.1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), col='#22558818', border='#22558840', xlim=c(125, 210), axes=FALSE, xlab='height (cm)', probability=TRUE)#
axis(1)#
lines(dens$x, dens$y, col='#225588')
58
58*2.54
#
#===> load in the data set from fdicHistograms <===##
#
BR <- list()#
MIDS <- br[-1]-0.25#
BR[[1]] <- seq(110, 210, 10)#
BR[[2]] <- seq(115, 210, 2.5)#
COUNTS <- list()#
for(i in 1:2){#
	COUNTS[[i]] <- rep(0, length(BR[[i]])-1)#
	for(j in 1:(length(BR[[i]])-1)){#
		these <- apply(cbind(MIDS < BR[[i]][j+1], MIDS >= BR[[i]][j]), 1, all)#
		if(any(these)){#
			COUNTS[[i]][j] <- sum(counts[these])#
		}#
	}#
}#
#
#
#
par(mfrow=c(1,1), mar=c(3, 1, 0.1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), col='#22558818', border='#22558840', xlim=c(125, 210), axes=FALSE, xlab='height (cm)', probability=TRUE)#
axis(1)#
lines(dens$x, dens$y, col='#225588')
dens$x
par(mfrow=c(1,1), mar=c(3, 1, 0.1, 1), mgp=c(1.8, 0.7, 0))#
histPlot(list(BR[[2]], COUNTS[[2]]), col='#22558818', border='#22558840', xlim=c(125, 210), axes=FALSE, xlab='height (cm)', probability=TRUE)#
axis(1)#
lines(dens$x, dens$y, col='#225588')#
these <- dens$x > 180 & dens$x < 185#
polygon(c(dens$x[these][1], dens$x[these], rev(dens$x[these])[1]), c(0, dens$y[these], 0), col='#225588BB', border='#225588BB')
sum(dens$y[these]/diff(dens$x[range(these)])
)
diff(dens$x[range(these)])
sum(dens$y[these])/diff(dens$x[range(these)])
these
sum(dens$y[these])/diff(dens$x[range(which(these))])
sum(dens$y[these])
sum(dens$y[these])/5
sum(dens$y[these])*diff(dens$x[range(which(these))])/5
sum(dens$y[these])*diff(dens$x[range(which(these))])/5/5
sum(dens$y[these]*diff(dens$x[c(these,rev(these)[1]+1)]))
diff(dens$x[c(these,rev(these)[1]+1)])
dens$x[these]
diff(dens$x[these])
sum(dens$y[these]*diff(dens$x[1:2]))
180/12/2.54
.905*12
sum(dens$y[these]*diff(dens$x[1:2]))
